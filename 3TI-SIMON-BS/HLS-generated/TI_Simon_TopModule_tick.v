// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TI_Simon_TopModule_tick (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        this_round_counter_read,
        this_bit_counter_read,
        this_dp_shifter1a_read,
        this_dp_shifter1b_read,
        this_dp_shifter1c_read,
        this_dp_shifter2a_read,
        this_dp_shifter2b_read,
        this_dp_shifter2c_read,
        this_dp_shift_in1a_read,
        this_dp_shift_in1b_read,
        this_dp_shift_in1c_read,
        this_dp_shift_in2a_read,
        this_dp_shift_in2b_read,
        this_dp_shift_in2c_read,
        this_dp_shifter_enable1a_read,
        this_dp_shifter_enable1b_read,
        this_dp_shifter_enable1c_read,
        this_dp_shifter_enable2a_read,
        this_dp_shifter_enable2b_read,
        this_dp_shifter_enable2c_read,
        this_dp_fifo_ff63a_read,
        this_dp_fifo_ff62a_read,
        this_dp_fifo_ff61a_read,
        this_dp_fifo_ff60a_read,
        this_dp_fifo_ff59a_read,
        this_dp_fifo_ff58a_read,
        this_dp_fifo_ff57a_read,
        this_dp_fifo_ff56a_read,
        this_dp_lut_ff63a_read,
        this_dp_lut_ff62a_read,
        this_dp_lut_ff61a_read,
        this_dp_lut_ff60a_read,
        this_dp_lut_ff59a_read,
        this_dp_lut_ff58a_read,
        this_dp_lut_ff57a_read,
        this_dp_fifo_ff63b_read,
        this_dp_fifo_ff62b_read,
        this_dp_fifo_ff61b_read,
        this_dp_fifo_ff60b_read,
        this_dp_fifo_ff59b_read,
        this_dp_fifo_ff58b_read,
        this_dp_fifo_ff57b_read,
        this_dp_fifo_ff56b_read,
        this_dp_lut_ff63b_read,
        this_dp_lut_ff62b_read,
        this_dp_lut_ff61b_read,
        this_dp_lut_ff60b_read,
        this_dp_lut_ff59b_read,
        this_dp_lut_ff58b_read,
        this_dp_lut_ff57b_read,
        this_dp_fifo_ff63c_read,
        this_dp_fifo_ff62c_read,
        this_dp_fifo_ff61c_read,
        this_dp_fifo_ff60c_read,
        this_dp_fifo_ff59c_read,
        this_dp_fifo_ff58c_read,
        this_dp_fifo_ff57c_read,
        this_dp_fifo_ff56c_read,
        this_dp_lut_ff63c_read,
        this_dp_lut_ff62c_read,
        this_dp_lut_ff61c_read,
        this_dp_lut_ff60c_read,
        this_dp_lut_ff59c_read,
        this_dp_lut_ff58c_read,
        this_dp_lut_ff57c_read,
        this_dp_lut_ff_inputa_read,
        this_dp_fifo_ff_inputa_read,
        this_dp_lut_ff_inputb_read,
        this_dp_fifo_ff_inputb_read,
        this_dp_lut_ff_inputc_read,
        this_dp_fifo_ff_inputc_read,
        this_dp_s1_read,
        this_dp_s4_read,
        this_dp_s5_read,
        this_dp_s6_read,
        this_dp_s7_read,
        this_dp_s3_read,
        this_dp_lut_outa_read,
        this_dp_lut_outb_read,
        this_dp_lut_outc_read,
        p_read177,
        p_read178,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        p_read64,
        p_read65,
        p_read187,
        p_read188,
        p_read66,
        p_read67,
        p_read116,
        p_read196,
        p_read197,
        p_read198,
        p_read199,
        p_read200,
        p_read201,
        p_read202,
        p_read203,
        p_read208,
        p_read209,
        p_read210,
        p_read117,
        p_read118,
        p_read119,
        p_read218,
        p_read219,
        p_read220,
        p_read221,
        p_read222,
        p_read223,
        p_read224,
        p_read225,
        this_k3_key_out_read,
        p_read124230,
        p_read125,
        this_k3_shift_in1_read,
        this_k3_shift_in2_read,
        this_k3_lut_out_read,
        p_read138,
        p_read139,
        p_read140,
        p_read141233,
        p_read142234,
        p_read143235,
        p_read144,
        p_read145,
        my_simon_core_k1_round_counter_constprop_i,
        my_simon_core_k1_round_counter_constprop_o,
        my_simon_core_k1_round_counter_constprop_o_ap_vld,
        my_simon_core_dp_bit_counter_constprop_i,
        my_simon_core_dp_bit_counter_constprop_o,
        my_simon_core_dp_bit_counter_constprop_o_ap_vld,
        my_simon_core_dp_couta_constprop_i,
        my_simon_core_dp_couta_constprop_o,
        my_simon_core_dp_couta_constprop_o_ap_vld,
        my_simon_core_dp_coutb_constprop_i,
        my_simon_core_dp_coutb_constprop_o,
        my_simon_core_dp_coutb_constprop_o_ap_vld,
        my_simon_core_dp_coutc_constprop_i,
        my_simon_core_dp_coutc_constprop_o,
        my_simon_core_dp_coutc_constprop_o_ap_vld,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71,
        ap_return_72,
        ap_return_73,
        ap_return_74,
        ap_return_75,
        ap_return_76,
        ap_return_77,
        ap_return_78,
        ap_return_79,
        ap_return_80,
        ap_return_81,
        ap_return_82,
        ap_return_83,
        ap_return_84,
        ap_return_85,
        ap_return_86,
        ap_return_87,
        ap_return_88,
        ap_return_89,
        ap_return_90,
        ap_return_91,
        ap_return_92,
        ap_return_93,
        ap_return_94,
        ap_return_95,
        ap_return_96,
        ap_return_97,
        ap_return_98,
        ap_return_99,
        ap_return_100,
        ap_return_101,
        ap_return_102,
        ap_return_103,
        ap_return_104,
        ap_return_105,
        ap_return_106,
        ap_return_107,
        ap_return_108,
        ap_return_109,
        ap_return_110,
        ap_return_111,
        ap_return_112,
        ap_return_113,
        ap_return_114,
        ap_return_115,
        ap_return_116,
        ap_return_117,
        ap_return_118,
        ap_return_119,
        ap_return_120,
        ap_return_121,
        ap_return_122,
        ap_return_123,
        ap_return_124,
        ap_return_125,
        ap_return_126,
        ap_return_127,
        ap_return_128,
        ap_return_129,
        ap_return_130,
        ap_return_131
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;
parameter    ap_const_lv68_0 = 68'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] p_read;
input  [0:0] p_read1;
input  [0:0] p_read2;
input  [1:0] p_read3;
input  [6:0] this_round_counter_read;
input  [6:0] this_bit_counter_read;
input  [55:0] this_dp_shifter1a_read;
input  [55:0] this_dp_shifter1b_read;
input  [55:0] this_dp_shifter1c_read;
input  [63:0] this_dp_shifter2a_read;
input  [63:0] this_dp_shifter2b_read;
input  [63:0] this_dp_shifter2c_read;
input  [0:0] this_dp_shift_in1a_read;
input  [0:0] this_dp_shift_in1b_read;
input  [0:0] this_dp_shift_in1c_read;
input  [0:0] this_dp_shift_in2a_read;
input  [0:0] this_dp_shift_in2b_read;
input  [0:0] this_dp_shift_in2c_read;
input  [0:0] this_dp_shifter_enable1a_read;
input  [0:0] this_dp_shifter_enable1b_read;
input  [0:0] this_dp_shifter_enable1c_read;
input  [0:0] this_dp_shifter_enable2a_read;
input  [0:0] this_dp_shifter_enable2b_read;
input  [0:0] this_dp_shifter_enable2c_read;
input  [0:0] this_dp_fifo_ff63a_read;
input  [0:0] this_dp_fifo_ff62a_read;
input  [0:0] this_dp_fifo_ff61a_read;
input  [0:0] this_dp_fifo_ff60a_read;
input  [0:0] this_dp_fifo_ff59a_read;
input  [0:0] this_dp_fifo_ff58a_read;
input  [0:0] this_dp_fifo_ff57a_read;
input  [0:0] this_dp_fifo_ff56a_read;
input  [0:0] this_dp_lut_ff63a_read;
input  [0:0] this_dp_lut_ff62a_read;
input  [0:0] this_dp_lut_ff61a_read;
input  [0:0] this_dp_lut_ff60a_read;
input  [0:0] this_dp_lut_ff59a_read;
input  [0:0] this_dp_lut_ff58a_read;
input  [0:0] this_dp_lut_ff57a_read;
input  [0:0] this_dp_fifo_ff63b_read;
input  [0:0] this_dp_fifo_ff62b_read;
input  [0:0] this_dp_fifo_ff61b_read;
input  [0:0] this_dp_fifo_ff60b_read;
input  [0:0] this_dp_fifo_ff59b_read;
input  [0:0] this_dp_fifo_ff58b_read;
input  [0:0] this_dp_fifo_ff57b_read;
input  [0:0] this_dp_fifo_ff56b_read;
input  [0:0] this_dp_lut_ff63b_read;
input  [0:0] this_dp_lut_ff62b_read;
input  [0:0] this_dp_lut_ff61b_read;
input  [0:0] this_dp_lut_ff60b_read;
input  [0:0] this_dp_lut_ff59b_read;
input  [0:0] this_dp_lut_ff58b_read;
input  [0:0] this_dp_lut_ff57b_read;
input  [0:0] this_dp_fifo_ff63c_read;
input  [0:0] this_dp_fifo_ff62c_read;
input  [0:0] this_dp_fifo_ff61c_read;
input  [0:0] this_dp_fifo_ff60c_read;
input  [0:0] this_dp_fifo_ff59c_read;
input  [0:0] this_dp_fifo_ff58c_read;
input  [0:0] this_dp_fifo_ff57c_read;
input  [0:0] this_dp_fifo_ff56c_read;
input  [0:0] this_dp_lut_ff63c_read;
input  [0:0] this_dp_lut_ff62c_read;
input  [0:0] this_dp_lut_ff61c_read;
input  [0:0] this_dp_lut_ff60c_read;
input  [0:0] this_dp_lut_ff59c_read;
input  [0:0] this_dp_lut_ff58c_read;
input  [0:0] this_dp_lut_ff57c_read;
input  [0:0] this_dp_lut_ff_inputa_read;
input  [0:0] this_dp_fifo_ff_inputa_read;
input  [0:0] this_dp_lut_ff_inputb_read;
input  [0:0] this_dp_fifo_ff_inputb_read;
input  [0:0] this_dp_lut_ff_inputc_read;
input  [0:0] this_dp_fifo_ff_inputc_read;
input  [0:0] this_dp_s1_read;
input  [0:0] this_dp_s4_read;
input  [0:0] this_dp_s5_read;
input  [0:0] this_dp_s6_read;
input  [0:0] this_dp_s7_read;
input  [1:0] this_dp_s3_read;
input  [0:0] this_dp_lut_outa_read;
input  [0:0] this_dp_lut_outb_read;
input  [0:0] this_dp_lut_outc_read;
input  [0:0] p_read177;
input  [0:0] p_read178;
input  [0:0] p_read59;
input  [1:0] p_read60;
input  [1:0] p_read61;
input  [0:0] p_read62;
input  [0:0] p_read63;
input  [0:0] p_read64;
input  [0:0] p_read65;
input  [59:0] p_read187;
input  [63:0] p_read188;
input  [0:0] p_read66;
input  [0:0] p_read67;
input  [0:0] p_read116;
input  [0:0] p_read196;
input  [0:0] p_read197;
input  [0:0] p_read198;
input  [0:0] p_read199;
input  [0:0] p_read200;
input  [0:0] p_read201;
input  [0:0] p_read202;
input  [0:0] p_read203;
input  [0:0] p_read208;
input  [59:0] p_read209;
input  [63:0] p_read210;
input  [0:0] p_read117;
input  [0:0] p_read118;
input  [0:0] p_read119;
input  [0:0] p_read218;
input  [0:0] p_read219;
input  [0:0] p_read220;
input  [0:0] p_read221;
input  [0:0] p_read222;
input  [0:0] p_read223;
input  [0:0] p_read224;
input  [0:0] p_read225;
input  [0:0] this_k3_key_out_read;
input  [59:0] p_read124230;
input  [63:0] p_read125;
input  [0:0] this_k3_shift_in1_read;
input  [0:0] this_k3_shift_in2_read;
input  [0:0] this_k3_lut_out_read;
input  [0:0] p_read138;
input  [0:0] p_read139;
input  [0:0] p_read140;
input  [0:0] p_read141233;
input  [0:0] p_read142234;
input  [0:0] p_read143235;
input  [0:0] p_read144;
input  [0:0] p_read145;
input  [6:0] my_simon_core_k1_round_counter_constprop_i;
output  [6:0] my_simon_core_k1_round_counter_constprop_o;
output   my_simon_core_k1_round_counter_constprop_o_ap_vld;
input  [6:0] my_simon_core_dp_bit_counter_constprop_i;
output  [6:0] my_simon_core_dp_bit_counter_constprop_o;
output   my_simon_core_dp_bit_counter_constprop_o_ap_vld;
input  [0:0] my_simon_core_dp_couta_constprop_i;
output  [0:0] my_simon_core_dp_couta_constprop_o;
output   my_simon_core_dp_couta_constprop_o_ap_vld;
input  [0:0] my_simon_core_dp_coutb_constprop_i;
output  [0:0] my_simon_core_dp_coutb_constprop_o;
output   my_simon_core_dp_coutb_constprop_o_ap_vld;
input  [0:0] my_simon_core_dp_coutc_constprop_i;
output  [0:0] my_simon_core_dp_coutc_constprop_o;
output   my_simon_core_dp_coutc_constprop_o_ap_vld;
output  [0:0] ap_return_0;
output  [0:0] ap_return_1;
output  [0:0] ap_return_2;
output  [0:0] ap_return_3;
output  [59:0] ap_return_4;
output  [63:0] ap_return_5;
output  [0:0] ap_return_6;
output  [0:0] ap_return_7;
output  [0:0] ap_return_8;
output  [0:0] ap_return_9;
output  [0:0] ap_return_10;
output  [0:0] ap_return_11;
output  [0:0] ap_return_12;
output  [0:0] ap_return_13;
output  [6:0] ap_return_14;
output  [6:0] ap_return_15;
output  [0:0] ap_return_16;
output  [0:0] ap_return_17;
output  [0:0] ap_return_18;
output  [0:0] ap_return_19;
output  [55:0] ap_return_20;
output  [55:0] ap_return_21;
output  [55:0] ap_return_22;
output  [63:0] ap_return_23;
output  [63:0] ap_return_24;
output  [63:0] ap_return_25;
output  [0:0] ap_return_26;
output  [0:0] ap_return_27;
output  [0:0] ap_return_28;
output  [0:0] ap_return_29;
output  [0:0] ap_return_30;
output  [0:0] ap_return_31;
output  [0:0] ap_return_32;
output  [0:0] ap_return_33;
output  [0:0] ap_return_34;
output  [0:0] ap_return_35;
output  [0:0] ap_return_36;
output  [0:0] ap_return_37;
output  [0:0] ap_return_38;
output  [0:0] ap_return_39;
output  [0:0] ap_return_40;
output  [0:0] ap_return_41;
output  [0:0] ap_return_42;
output  [0:0] ap_return_43;
output  [0:0] ap_return_44;
output  [0:0] ap_return_45;
output  [0:0] ap_return_46;
output  [0:0] ap_return_47;
output  [0:0] ap_return_48;
output  [0:0] ap_return_49;
output  [0:0] ap_return_50;
output  [0:0] ap_return_51;
output  [0:0] ap_return_52;
output  [0:0] ap_return_53;
output  [0:0] ap_return_54;
output  [0:0] ap_return_55;
output  [0:0] ap_return_56;
output  [0:0] ap_return_57;
output  [0:0] ap_return_58;
output  [0:0] ap_return_59;
output  [0:0] ap_return_60;
output  [0:0] ap_return_61;
output  [0:0] ap_return_62;
output  [0:0] ap_return_63;
output  [0:0] ap_return_64;
output  [0:0] ap_return_65;
output  [0:0] ap_return_66;
output  [0:0] ap_return_67;
output  [0:0] ap_return_68;
output  [0:0] ap_return_69;
output  [0:0] ap_return_70;
output  [0:0] ap_return_71;
output  [0:0] ap_return_72;
output  [59:0] ap_return_73;
output  [63:0] ap_return_74;
output  [0:0] ap_return_75;
output  [0:0] ap_return_76;
output  [0:0] ap_return_77;
output  [0:0] ap_return_78;
output  [0:0] ap_return_79;
output  [0:0] ap_return_80;
output  [0:0] ap_return_81;
output  [0:0] ap_return_82;
output  [0:0] ap_return_83;
output  [59:0] ap_return_84;
output  [63:0] ap_return_85;
output  [0:0] ap_return_86;
output  [0:0] ap_return_87;
output  [0:0] ap_return_88;
output  [0:0] ap_return_89;
output  [0:0] ap_return_90;
output  [0:0] ap_return_91;
output  [0:0] ap_return_92;
output  [0:0] ap_return_93;
output  [0:0] ap_return_94;
output  [0:0] ap_return_95;
output  [0:0] ap_return_96;
output  [0:0] ap_return_97;
output  [0:0] ap_return_98;
output  [0:0] ap_return_99;
output  [0:0] ap_return_100;
output  [0:0] ap_return_101;
output  [0:0] ap_return_102;
output  [0:0] ap_return_103;
output  [0:0] ap_return_104;
output  [0:0] ap_return_105;
output  [0:0] ap_return_106;
output  [0:0] ap_return_107;
output  [0:0] ap_return_108;
output  [0:0] ap_return_109;
output  [0:0] ap_return_110;
output  [0:0] ap_return_111;
output  [0:0] ap_return_112;
output  [0:0] ap_return_113;
output  [0:0] ap_return_114;
output  [0:0] ap_return_115;
output  [0:0] ap_return_116;
output  [1:0] ap_return_117;
output  [0:0] ap_return_118;
output  [0:0] ap_return_119;
output  [0:0] ap_return_120;
output  [1:0] ap_return_121;
output  [1:0] ap_return_122;
output  [0:0] ap_return_123;
output  [0:0] ap_return_124;
output  [0:0] ap_return_125;
output  [0:0] ap_return_126;
output  [0:0] ap_return_127;
output  [0:0] ap_return_128;
output  [0:0] ap_return_129;
output  [0:0] ap_return_130;
output  [0:0] ap_return_131;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] my_simon_core_k1_round_counter_constprop_o;
reg my_simon_core_k1_round_counter_constprop_o_ap_vld;
reg[6:0] my_simon_core_dp_bit_counter_constprop_o;
reg my_simon_core_dp_bit_counter_constprop_o_ap_vld;
reg[0:0] my_simon_core_dp_couta_constprop_o;
reg my_simon_core_dp_couta_constprop_o_ap_vld;
reg[0:0] my_simon_core_dp_coutb_constprop_o;
reg my_simon_core_dp_coutb_constprop_o_ap_vld;
reg[0:0] my_simon_core_dp_coutc_constprop_o;
reg my_simon_core_dp_coutc_constprop_o_ap_vld;
reg[0:0] ap_return_0;
reg[0:0] ap_return_1;
reg[0:0] ap_return_2;
reg[0:0] ap_return_3;
reg[59:0] ap_return_4;
reg[63:0] ap_return_5;
reg[0:0] ap_return_6;
reg[0:0] ap_return_7;
reg[0:0] ap_return_8;
reg[0:0] ap_return_9;
reg[0:0] ap_return_10;
reg[0:0] ap_return_11;
reg[0:0] ap_return_12;
reg[0:0] ap_return_13;
reg[6:0] ap_return_14;
reg[6:0] ap_return_15;
reg[0:0] ap_return_16;
reg[0:0] ap_return_17;
reg[0:0] ap_return_18;
reg[0:0] ap_return_19;
reg[55:0] ap_return_20;
reg[55:0] ap_return_21;
reg[55:0] ap_return_22;
reg[63:0] ap_return_23;
reg[63:0] ap_return_24;
reg[63:0] ap_return_25;
reg[0:0] ap_return_26;
reg[0:0] ap_return_27;
reg[0:0] ap_return_28;
reg[0:0] ap_return_29;
reg[0:0] ap_return_30;
reg[0:0] ap_return_31;
reg[0:0] ap_return_32;
reg[0:0] ap_return_33;
reg[0:0] ap_return_34;
reg[0:0] ap_return_35;
reg[0:0] ap_return_36;
reg[0:0] ap_return_37;
reg[0:0] ap_return_38;
reg[0:0] ap_return_39;
reg[0:0] ap_return_40;
reg[0:0] ap_return_41;
reg[0:0] ap_return_42;
reg[0:0] ap_return_43;
reg[0:0] ap_return_44;
reg[0:0] ap_return_45;
reg[0:0] ap_return_46;
reg[0:0] ap_return_47;
reg[0:0] ap_return_48;
reg[0:0] ap_return_49;
reg[0:0] ap_return_50;
reg[0:0] ap_return_51;
reg[0:0] ap_return_52;
reg[0:0] ap_return_53;
reg[0:0] ap_return_54;
reg[0:0] ap_return_55;
reg[0:0] ap_return_56;
reg[0:0] ap_return_57;
reg[0:0] ap_return_58;
reg[0:0] ap_return_59;
reg[0:0] ap_return_60;
reg[0:0] ap_return_61;
reg[0:0] ap_return_62;
reg[0:0] ap_return_63;
reg[0:0] ap_return_64;
reg[0:0] ap_return_65;
reg[0:0] ap_return_66;
reg[0:0] ap_return_67;
reg[0:0] ap_return_68;
reg[0:0] ap_return_69;
reg[0:0] ap_return_70;
reg[0:0] ap_return_71;
reg[0:0] ap_return_72;
reg[59:0] ap_return_73;
reg[63:0] ap_return_74;
reg[0:0] ap_return_75;
reg[0:0] ap_return_76;
reg[0:0] ap_return_77;
reg[0:0] ap_return_78;
reg[0:0] ap_return_79;
reg[0:0] ap_return_80;
reg[0:0] ap_return_81;
reg[0:0] ap_return_82;
reg[0:0] ap_return_83;
reg[59:0] ap_return_84;
reg[63:0] ap_return_85;
reg[0:0] ap_return_86;
reg[0:0] ap_return_87;
reg[0:0] ap_return_88;
reg[0:0] ap_return_89;
reg[0:0] ap_return_90;
reg[0:0] ap_return_91;
reg[0:0] ap_return_92;
reg[0:0] ap_return_93;
reg[0:0] ap_return_94;
reg[0:0] ap_return_95;
reg[0:0] ap_return_96;
reg[0:0] ap_return_97;
reg[0:0] ap_return_98;
reg[0:0] ap_return_99;
reg[0:0] ap_return_100;
reg[0:0] ap_return_101;
reg[0:0] ap_return_102;
reg[0:0] ap_return_103;
reg[0:0] ap_return_104;
reg[0:0] ap_return_105;
reg[0:0] ap_return_106;
reg[0:0] ap_return_107;
reg[0:0] ap_return_108;
reg[0:0] ap_return_109;
reg[0:0] ap_return_110;
reg[0:0] ap_return_111;
reg[0:0] ap_return_112;
reg[0:0] ap_return_113;
reg[0:0] ap_return_114;
reg[0:0] ap_return_115;
reg[0:0] ap_return_116;
reg[1:0] ap_return_117;
reg[0:0] ap_return_118;
reg[0:0] ap_return_119;
reg[0:0] ap_return_120;
reg[1:0] ap_return_121;
reg[1:0] ap_return_122;
reg[0:0] ap_return_123;
reg[0:0] ap_return_124;
reg[0:0] ap_return_125;
reg[0:0] ap_return_126;
reg[0:0] ap_return_127;
reg[0:0] ap_return_128;
reg[0:0] ap_return_129;
reg[0:0] ap_return_130;
reg[0:0] ap_return_131;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] my_simon_core_dp_bit_counter_constprop_load_reg_3040;
wire   [0:0] icmp_ln1035_fu_1356_p2;
reg   [0:0] icmp_ln1035_reg_3047;
wire   [0:0] icmp_ln1027_1_fu_1372_p2;
reg   [0:0] icmp_ln1027_1_reg_3052;
wire    ap_CS_fsm_state2;
wire   [0:0] and_ln18_1_fu_1402_p2;
reg   [0:0] and_ln18_1_reg_3108;
reg   [6:0] p_Val2_6_reg_3113;
wire   [0:0] p_Result_3_fu_1413_p1;
reg   [0:0] p_Result_3_reg_3119;
wire   [59:0] p_Val2_7_fu_1435_p3;
reg   [59:0] p_Val2_7_reg_3124;
wire   [0:0] p_Result_14_fu_1443_p1;
reg   [0:0] p_Result_14_reg_3129;
wire   [63:0] p_Val2_8_fu_1465_p3;
reg   [63:0] p_Val2_8_reg_3134;
wire   [0:0] p_Result_15_fu_1473_p1;
reg   [0:0] p_Result_15_reg_3139;
wire   [0:0] select_ln27_fu_1477_p3;
reg   [0:0] select_ln27_reg_3145;
wire   [0:0] select_ln27_1_fu_1485_p3;
reg   [0:0] select_ln27_1_reg_3150;
wire   [0:0] select_ln27_2_fu_1493_p3;
reg   [0:0] select_ln27_2_reg_3155;
wire   [0:0] select_ln27_3_fu_1501_p3;
reg   [0:0] select_ln27_3_reg_3160;
wire   [0:0] select_ln38_fu_1509_p3;
reg   [0:0] select_ln38_reg_3165;
wire   [0:0] select_ln38_1_fu_1517_p3;
reg   [0:0] select_ln38_1_reg_3170;
wire   [0:0] select_ln38_2_fu_1525_p3;
reg   [0:0] select_ln38_2_reg_3175;
wire   [0:0] select_ln38_3_fu_1533_p3;
reg   [0:0] select_ln38_3_reg_3180;
wire   [0:0] this_shift_in2_i_fu_1541_p6;
reg   [0:0] this_shift_in2_i_reg_3185;
wire   [1:0] select_ln58_fu_1596_p3;
reg   [1:0] select_ln58_reg_3190;
wire   [0:0] rhs_V_15_fu_1604_p3;
reg   [0:0] rhs_V_15_reg_3195;
wire   [0:0] this_shift_in1_i_fu_1612_p6;
reg   [0:0] this_shift_in1_i_reg_3200;
wire   [1:0] select_ln96_1_fu_1700_p3;
reg   [1:0] select_ln96_1_reg_3205;
reg   [0:0] tmp_14_reg_3210;
wire   [0:0] icmp_ln1019_5_fu_1716_p2;
reg   [0:0] icmp_ln1019_5_reg_3217;
wire   [6:0] add_ln840_fu_1727_p2;
wire   [0:0] and_ln116_fu_1721_p2;
wire   [59:0] p_Val2_9_fu_1757_p3;
reg   [59:0] p_Val2_9_reg_3230;
wire   [63:0] p_Val2_10_fu_1783_p3;
reg   [63:0] p_Val2_10_reg_3235;
wire   [0:0] p_Result_16_fu_1791_p1;
reg   [0:0] p_Result_16_reg_3240;
wire   [0:0] select_ln32_4_fu_1795_p3;
reg   [0:0] select_ln32_4_reg_3245;
wire   [0:0] select_ln32_5_fu_1803_p3;
reg   [0:0] select_ln32_5_reg_3251;
wire   [0:0] select_ln32_6_fu_1811_p3;
reg   [0:0] select_ln32_6_reg_3256;
wire   [0:0] select_ln32_7_fu_1819_p3;
reg   [0:0] select_ln32_7_reg_3261;
wire   [0:0] this_shift_in1_i1_fu_1835_p6;
reg   [0:0] this_shift_in1_i1_reg_3266;
wire   [0:0] ret_V_13_fu_1870_p2;
reg   [0:0] ret_V_13_reg_3271;
wire   [59:0] p_Val2_s_fu_1894_p3;
reg   [59:0] p_Val2_s_reg_3276;
wire   [63:0] p_Val2_11_fu_1920_p3;
reg   [63:0] p_Val2_11_reg_3281;
wire   [0:0] p_Result_17_fu_1928_p1;
reg   [0:0] p_Result_17_reg_3286;
wire   [0:0] select_ln32_fu_1932_p3;
reg   [0:0] select_ln32_reg_3291;
wire   [0:0] select_ln32_1_fu_1940_p3;
reg   [0:0] select_ln32_1_reg_3296;
wire   [0:0] select_ln32_2_fu_1948_p3;
reg   [0:0] select_ln32_2_reg_3301;
wire   [0:0] select_ln32_3_fu_1956_p3;
reg   [0:0] select_ln32_3_reg_3306;
wire   [0:0] this_k3_shift_in1_fu_1972_p6;
reg   [0:0] this_k3_shift_in1_reg_3312;
wire   [0:0] ret_V_fu_1996_p2;
reg   [0:0] ret_V_reg_3317;
reg   [55:0] newret_reg_3322;
reg   [55:0] newret78_reg_3327;
reg   [55:0] newret79_reg_3332;
reg   [63:0] newret80_reg_3337;
reg   [63:0] newret81_reg_3342;
reg   [63:0] newret82_reg_3347;
reg   [0:0] newret83_reg_3352;
reg   [0:0] newret84_reg_3357;
reg   [0:0] newret85_reg_3362;
reg   [0:0] newret86_reg_3367;
reg   [0:0] newret87_reg_3372;
reg   [0:0] newret88_reg_3377;
reg   [0:0] newret89_reg_3382;
reg   [0:0] newret90_reg_3387;
reg   [0:0] newret91_reg_3392;
reg   [0:0] newret92_reg_3397;
reg   [0:0] newret93_reg_3402;
reg   [0:0] newret94_reg_3407;
reg   [0:0] newret95_reg_3412;
reg   [0:0] newret96_reg_3417;
reg   [0:0] newret97_reg_3422;
reg   [0:0] newret98_reg_3427;
reg   [0:0] newret99_reg_3432;
reg   [0:0] newret100_reg_3437;
reg   [0:0] newret101_reg_3442;
reg   [0:0] newret102_reg_3447;
reg   [0:0] newret103_reg_3452;
reg   [0:0] newret104_reg_3457;
reg   [0:0] newret105_reg_3462;
reg   [0:0] newret106_reg_3467;
reg   [0:0] newret107_reg_3472;
reg   [0:0] newret108_reg_3477;
reg   [0:0] newret109_reg_3482;
reg   [0:0] newret110_reg_3487;
reg   [0:0] newret111_reg_3492;
reg   [0:0] newret112_reg_3497;
reg   [0:0] newret113_reg_3502;
reg   [0:0] newret114_reg_3507;
reg   [0:0] newret115_reg_3512;
reg   [0:0] newret116_reg_3517;
reg   [0:0] newret117_reg_3522;
reg   [0:0] newret118_reg_3527;
reg   [0:0] newret119_reg_3532;
reg   [0:0] newret120_reg_3537;
reg   [0:0] newret121_reg_3542;
reg   [0:0] newret122_reg_3547;
reg   [0:0] newret123_reg_3552;
reg   [0:0] newret124_reg_3557;
reg   [0:0] newret125_reg_3562;
reg   [0:0] newret126_reg_3567;
reg   [0:0] newret127_reg_3572;
reg   [0:0] newret128_reg_3577;
reg   [0:0] newret129_reg_3582;
reg   [0:0] newret130_reg_3587;
reg   [0:0] newret131_reg_3592;
reg   [0:0] newret132_reg_3597;
reg   [0:0] newret133_reg_3602;
reg   [0:0] newret134_reg_3607;
reg   [0:0] newret135_reg_3612;
reg   [0:0] newret136_reg_3617;
reg   [0:0] newret137_reg_3622;
reg   [0:0] newret138_reg_3627;
reg   [0:0] newret139_reg_3632;
reg   [0:0] newret140_reg_3637;
reg   [0:0] newret141_reg_3642;
reg   [0:0] newret142_reg_3647;
reg   [0:0] newret143_reg_3652;
reg   [0:0] newret144_reg_3657;
reg   [0:0] newret145_reg_3662;
reg   [0:0] newret146_reg_3667;
reg   [0:0] newret147_reg_3672;
reg   [0:0] newret148_reg_3677;
reg   [0:0] newret149_reg_3682;
reg   [0:0] newret150_reg_3687;
reg   [1:0] newret151_reg_3692;
reg   [0:0] newret152_reg_3697;
reg   [0:0] newret153_reg_3702;
reg   [0:0] newret154_reg_3707;
wire    call_ret_tick_dp_fu_1157_ap_ready;
wire   [6:0] call_ret_tick_dp_fu_1157_my_simon_core_dp_bit_counter_constprop_o;
wire    call_ret_tick_dp_fu_1157_my_simon_core_dp_bit_counter_constprop_o_ap_vld;
wire   [0:0] call_ret_tick_dp_fu_1157_my_simon_core_dp_couta_constprop;
wire    call_ret_tick_dp_fu_1157_my_simon_core_dp_couta_constprop_ap_vld;
wire   [0:0] call_ret_tick_dp_fu_1157_my_simon_core_dp_coutb_constprop;
wire    call_ret_tick_dp_fu_1157_my_simon_core_dp_coutb_constprop_ap_vld;
wire   [0:0] call_ret_tick_dp_fu_1157_my_simon_core_dp_coutc_constprop;
wire    call_ret_tick_dp_fu_1157_my_simon_core_dp_coutc_constprop_ap_vld;
wire   [55:0] call_ret_tick_dp_fu_1157_ap_return_0;
wire   [55:0] call_ret_tick_dp_fu_1157_ap_return_1;
wire   [55:0] call_ret_tick_dp_fu_1157_ap_return_2;
wire   [63:0] call_ret_tick_dp_fu_1157_ap_return_3;
wire   [63:0] call_ret_tick_dp_fu_1157_ap_return_4;
wire   [63:0] call_ret_tick_dp_fu_1157_ap_return_5;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_6;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_7;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_8;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_9;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_10;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_11;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_12;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_13;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_14;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_15;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_16;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_17;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_18;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_19;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_20;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_21;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_22;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_23;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_24;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_25;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_26;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_27;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_28;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_29;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_30;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_31;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_32;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_33;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_34;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_35;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_36;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_37;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_38;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_39;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_40;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_41;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_42;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_43;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_44;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_45;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_46;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_47;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_48;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_49;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_50;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_51;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_52;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_53;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_54;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_55;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_56;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_57;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_58;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_59;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_60;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_61;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_62;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_63;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_64;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_65;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_66;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_67;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_68;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_69;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_70;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_71;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_72;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_73;
wire   [1:0] call_ret_tick_dp_fu_1157_ap_return_74;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_75;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_76;
wire   [0:0] call_ret_tick_dp_fu_1157_ap_return_77;
reg   [6:0] empty_reg_1148;
wire    ap_CS_fsm_state3;
wire   [4:0] tmp_fu_1346_p4;
wire   [4:0] tmp_13_fu_1362_p4;
wire   [0:0] icmp_ln1019_2_fu_1384_p2;
wire   [0:0] icmp_ln1019_3_fu_1390_p2;
wire   [0:0] and_ln18_fu_1396_p2;
wire   [0:0] icmp_ln1019_fu_1378_p2;
wire   [58:0] tmp_i_fu_1417_p4;
wire   [59:0] p_Result_4_fu_1427_p3;
wire   [62:0] tmp_i_18_fu_1447_p4;
wire   [63:0] p_Result_6_fu_1457_p3;
wire   [0:0] icmp_ln1019_4_fu_1555_p2;
wire   [0:0] xor_ln58_fu_1561_p2;
wire   [0:0] icmp_ln1027_fu_1577_p2;
wire   [0:0] or_ln60_fu_1583_p2;
wire   [0:0] or_ln58_fu_1567_p2;
wire   [1:0] zext_ln58_fu_1573_p1;
wire   [1:0] select_ln60_fu_1588_p3;
wire   [0:0] xor_ln1019_fu_1637_p2;
wire   [0:0] and_ln1019_fu_1643_p2;
wire   [0:0] and_ln94_fu_1626_p2;
wire   [0:0] xor_ln94_fu_1655_p2;
wire   [0:0] icmp_ln1035_1_fu_1631_p2;
wire   [0:0] and_ln96_1_fu_1667_p2;
wire   [0:0] and_ln96_fu_1661_p2;
wire   [0:0] and_ln96_2_fu_1672_p2;
wire   [0:0] and_ln94_1_fu_1649_p2;
wire   [0:0] or_ln96_fu_1686_p2;
wire   [1:0] select_ln96_2_fu_1678_p3;
wire   [1:0] select_ln96_fu_1692_p3;
wire   [58:0] tmp_i1_fu_1739_p4;
wire   [59:0] p_Result_9_fu_1749_p3;
wire   [62:0] tmp_i1_19_fu_1765_p4;
wire   [63:0] p_Result_10_fu_1775_p3;
wire   [0:0] this_shift_in1_i1_fu_1835_p4;
wire   [0:0] rhs_V_18_fu_1827_p3;
wire   [0:0] trunc_ln1499_fu_1854_p1;
wire   [0:0] rhs_V_19_fu_1849_p2;
wire   [0:0] xor_ln1499_18_fu_1864_p2;
wire   [0:0] xor_ln1499_17_fu_1858_p2;
wire   [58:0] tmp15_fu_1876_p4;
wire   [59:0] p_Result_s_fu_1886_p3;
wire   [62:0] tmp_s_fu_1902_p4;
wire   [63:0] p_Result_12_fu_1912_p3;
wire   [0:0] this_k3_shift_in1_fu_1972_p4;
wire   [0:0] rhs_V_fu_1964_p3;
wire   [0:0] trunc_ln1499_3_fu_1986_p1;
wire   [0:0] xor_ln1499_20_fu_1990_p2;
wire   [0:0] p_Result_8_fu_2314_p3;
wire   [0:0] rhs_V_17_fu_2322_p2;
wire   [0:0] xor_ln1499_15_fu_2331_p2;
wire   [0:0] xor_ln1499_fu_2327_p2;
wire   [0:0] this_k3_shift_in2_fu_2352_p6;
wire   [0:0] ret_V_12_fu_2336_p2;
wire   [0:0] this_shift_in2_i1_fu_2342_p6;
reg   [0:0] ap_return_0_preg;
reg   [0:0] ap_return_1_preg;
reg   [0:0] ap_return_2_preg;
reg   [0:0] ap_return_3_preg;
reg   [59:0] ap_return_4_preg;
reg   [63:0] ap_return_5_preg;
reg   [0:0] ap_return_6_preg;
reg   [0:0] ap_return_7_preg;
reg   [0:0] ap_return_8_preg;
reg   [0:0] ap_return_9_preg;
reg   [0:0] ap_return_10_preg;
reg   [0:0] ap_return_11_preg;
reg   [0:0] ap_return_12_preg;
reg   [0:0] ap_return_13_preg;
reg   [6:0] ap_return_14_preg;
reg   [6:0] ap_return_15_preg;
reg   [0:0] ap_return_16_preg;
reg   [0:0] ap_return_17_preg;
reg   [0:0] ap_return_18_preg;
reg   [0:0] ap_return_19_preg;
reg   [55:0] ap_return_20_preg;
reg   [55:0] ap_return_21_preg;
reg   [55:0] ap_return_22_preg;
reg   [63:0] ap_return_23_preg;
reg   [63:0] ap_return_24_preg;
reg   [63:0] ap_return_25_preg;
reg   [0:0] ap_return_26_preg;
reg   [0:0] ap_return_27_preg;
reg   [0:0] ap_return_28_preg;
reg   [0:0] ap_return_29_preg;
reg   [0:0] ap_return_30_preg;
reg   [0:0] ap_return_31_preg;
reg   [0:0] ap_return_32_preg;
reg   [0:0] ap_return_33_preg;
reg   [0:0] ap_return_34_preg;
reg   [0:0] ap_return_35_preg;
reg   [0:0] ap_return_36_preg;
reg   [0:0] ap_return_37_preg;
reg   [0:0] ap_return_38_preg;
reg   [0:0] ap_return_39_preg;
reg   [0:0] ap_return_40_preg;
reg   [0:0] ap_return_41_preg;
reg   [0:0] ap_return_42_preg;
reg   [0:0] ap_return_43_preg;
reg   [0:0] ap_return_44_preg;
reg   [0:0] ap_return_45_preg;
reg   [0:0] ap_return_46_preg;
reg   [0:0] ap_return_47_preg;
reg   [0:0] ap_return_48_preg;
reg   [0:0] ap_return_49_preg;
reg   [0:0] ap_return_50_preg;
reg   [0:0] ap_return_51_preg;
reg   [0:0] ap_return_52_preg;
reg   [0:0] ap_return_53_preg;
reg   [0:0] ap_return_54_preg;
reg   [0:0] ap_return_55_preg;
reg   [0:0] ap_return_56_preg;
reg   [0:0] ap_return_57_preg;
reg   [0:0] ap_return_58_preg;
reg   [0:0] ap_return_59_preg;
reg   [0:0] ap_return_60_preg;
reg   [0:0] ap_return_61_preg;
reg   [0:0] ap_return_62_preg;
reg   [0:0] ap_return_63_preg;
reg   [0:0] ap_return_64_preg;
reg   [0:0] ap_return_65_preg;
reg   [0:0] ap_return_66_preg;
reg   [0:0] ap_return_67_preg;
reg   [0:0] ap_return_68_preg;
reg   [0:0] ap_return_69_preg;
reg   [0:0] ap_return_70_preg;
reg   [0:0] ap_return_71_preg;
reg   [0:0] ap_return_72_preg;
reg   [59:0] ap_return_73_preg;
reg   [63:0] ap_return_74_preg;
reg   [0:0] ap_return_75_preg;
reg   [0:0] ap_return_76_preg;
reg   [0:0] ap_return_77_preg;
reg   [0:0] ap_return_78_preg;
reg   [0:0] ap_return_79_preg;
reg   [0:0] ap_return_80_preg;
reg   [0:0] ap_return_81_preg;
reg   [0:0] ap_return_82_preg;
reg   [0:0] ap_return_83_preg;
reg   [59:0] ap_return_84_preg;
reg   [63:0] ap_return_85_preg;
reg   [0:0] ap_return_86_preg;
reg   [0:0] ap_return_87_preg;
reg   [0:0] ap_return_88_preg;
reg   [0:0] ap_return_89_preg;
reg   [0:0] ap_return_90_preg;
reg   [0:0] ap_return_91_preg;
reg   [0:0] ap_return_92_preg;
reg   [0:0] ap_return_93_preg;
reg   [0:0] ap_return_94_preg;
reg   [0:0] ap_return_95_preg;
reg   [0:0] ap_return_96_preg;
reg   [0:0] ap_return_97_preg;
reg   [0:0] ap_return_98_preg;
reg   [0:0] ap_return_99_preg;
reg   [0:0] ap_return_100_preg;
reg   [0:0] ap_return_101_preg;
reg   [0:0] ap_return_102_preg;
reg   [0:0] ap_return_103_preg;
reg   [0:0] ap_return_104_preg;
reg   [0:0] ap_return_105_preg;
reg   [0:0] ap_return_106_preg;
reg   [0:0] ap_return_107_preg;
reg   [0:0] ap_return_108_preg;
reg   [0:0] ap_return_109_preg;
reg   [0:0] ap_return_110_preg;
reg   [0:0] ap_return_111_preg;
reg   [0:0] ap_return_112_preg;
reg   [0:0] ap_return_113_preg;
reg   [0:0] ap_return_114_preg;
reg   [0:0] ap_return_115_preg;
reg   [0:0] ap_return_116_preg;
reg   [1:0] ap_return_117_preg;
reg   [0:0] ap_return_118_preg;
reg   [0:0] ap_return_119_preg;
reg   [0:0] ap_return_120_preg;
reg   [1:0] ap_return_121_preg;
reg   [1:0] ap_return_122_preg;
reg   [0:0] ap_return_123_preg;
reg   [0:0] ap_return_124_preg;
reg   [0:0] ap_return_125_preg;
reg   [0:0] ap_return_126_preg;
reg   [0:0] ap_return_127_preg;
reg   [0:0] ap_return_128_preg;
reg   [0:0] ap_return_129_preg;
reg   [0:0] ap_return_130_preg;
reg   [0:0] ap_return_131_preg;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_return_0_preg = 1'd0;
#0 ap_return_1_preg = 1'd0;
#0 ap_return_2_preg = 1'd0;
#0 ap_return_3_preg = 1'd0;
#0 ap_return_4_preg = 60'd0;
#0 ap_return_5_preg = 64'd0;
#0 ap_return_6_preg = 1'd0;
#0 ap_return_7_preg = 1'd0;
#0 ap_return_8_preg = 1'd0;
#0 ap_return_9_preg = 1'd0;
#0 ap_return_10_preg = 1'd0;
#0 ap_return_11_preg = 1'd0;
#0 ap_return_12_preg = 1'd0;
#0 ap_return_13_preg = 1'd0;
#0 ap_return_14_preg = 7'd0;
#0 ap_return_15_preg = 7'd0;
#0 ap_return_16_preg = 1'd0;
#0 ap_return_17_preg = 1'd0;
#0 ap_return_18_preg = 1'd0;
#0 ap_return_19_preg = 1'd0;
#0 ap_return_20_preg = 56'd0;
#0 ap_return_21_preg = 56'd0;
#0 ap_return_22_preg = 56'd0;
#0 ap_return_23_preg = 64'd0;
#0 ap_return_24_preg = 64'd0;
#0 ap_return_25_preg = 64'd0;
#0 ap_return_26_preg = 1'd0;
#0 ap_return_27_preg = 1'd0;
#0 ap_return_28_preg = 1'd0;
#0 ap_return_29_preg = 1'd0;
#0 ap_return_30_preg = 1'd0;
#0 ap_return_31_preg = 1'd0;
#0 ap_return_32_preg = 1'd0;
#0 ap_return_33_preg = 1'd0;
#0 ap_return_34_preg = 1'd0;
#0 ap_return_35_preg = 1'd0;
#0 ap_return_36_preg = 1'd0;
#0 ap_return_37_preg = 1'd0;
#0 ap_return_38_preg = 1'd0;
#0 ap_return_39_preg = 1'd0;
#0 ap_return_40_preg = 1'd0;
#0 ap_return_41_preg = 1'd0;
#0 ap_return_42_preg = 1'd0;
#0 ap_return_43_preg = 1'd0;
#0 ap_return_44_preg = 1'd0;
#0 ap_return_45_preg = 1'd0;
#0 ap_return_46_preg = 1'd0;
#0 ap_return_47_preg = 1'd0;
#0 ap_return_48_preg = 1'd0;
#0 ap_return_49_preg = 1'd0;
#0 ap_return_50_preg = 1'd0;
#0 ap_return_51_preg = 1'd0;
#0 ap_return_52_preg = 1'd0;
#0 ap_return_53_preg = 1'd0;
#0 ap_return_54_preg = 1'd0;
#0 ap_return_55_preg = 1'd0;
#0 ap_return_56_preg = 1'd0;
#0 ap_return_57_preg = 1'd0;
#0 ap_return_58_preg = 1'd0;
#0 ap_return_59_preg = 1'd0;
#0 ap_return_60_preg = 1'd0;
#0 ap_return_61_preg = 1'd0;
#0 ap_return_62_preg = 1'd0;
#0 ap_return_63_preg = 1'd0;
#0 ap_return_64_preg = 1'd0;
#0 ap_return_65_preg = 1'd0;
#0 ap_return_66_preg = 1'd0;
#0 ap_return_67_preg = 1'd0;
#0 ap_return_68_preg = 1'd0;
#0 ap_return_69_preg = 1'd0;
#0 ap_return_70_preg = 1'd0;
#0 ap_return_71_preg = 1'd0;
#0 ap_return_72_preg = 1'd0;
#0 ap_return_73_preg = 60'd0;
#0 ap_return_74_preg = 64'd0;
#0 ap_return_75_preg = 1'd0;
#0 ap_return_76_preg = 1'd0;
#0 ap_return_77_preg = 1'd0;
#0 ap_return_78_preg = 1'd0;
#0 ap_return_79_preg = 1'd0;
#0 ap_return_80_preg = 1'd0;
#0 ap_return_81_preg = 1'd0;
#0 ap_return_82_preg = 1'd0;
#0 ap_return_83_preg = 1'd0;
#0 ap_return_84_preg = 60'd0;
#0 ap_return_85_preg = 64'd0;
#0 ap_return_86_preg = 1'd0;
#0 ap_return_87_preg = 1'd0;
#0 ap_return_88_preg = 1'd0;
#0 ap_return_89_preg = 1'd0;
#0 ap_return_90_preg = 1'd0;
#0 ap_return_91_preg = 1'd0;
#0 ap_return_92_preg = 1'd0;
#0 ap_return_93_preg = 1'd0;
#0 ap_return_94_preg = 1'd0;
#0 ap_return_95_preg = 1'd0;
#0 ap_return_96_preg = 1'd0;
#0 ap_return_97_preg = 1'd0;
#0 ap_return_98_preg = 1'd0;
#0 ap_return_99_preg = 1'd0;
#0 ap_return_100_preg = 1'd0;
#0 ap_return_101_preg = 1'd0;
#0 ap_return_102_preg = 1'd0;
#0 ap_return_103_preg = 1'd0;
#0 ap_return_104_preg = 1'd0;
#0 ap_return_105_preg = 1'd0;
#0 ap_return_106_preg = 1'd0;
#0 ap_return_107_preg = 1'd0;
#0 ap_return_108_preg = 1'd0;
#0 ap_return_109_preg = 1'd0;
#0 ap_return_110_preg = 1'd0;
#0 ap_return_111_preg = 1'd0;
#0 ap_return_112_preg = 1'd0;
#0 ap_return_113_preg = 1'd0;
#0 ap_return_114_preg = 1'd0;
#0 ap_return_115_preg = 1'd0;
#0 ap_return_116_preg = 1'd0;
#0 ap_return_117_preg = 2'd0;
#0 ap_return_118_preg = 1'd0;
#0 ap_return_119_preg = 1'd0;
#0 ap_return_120_preg = 1'd0;
#0 ap_return_121_preg = 2'd0;
#0 ap_return_122_preg = 2'd0;
#0 ap_return_123_preg = 1'd0;
#0 ap_return_124_preg = 1'd0;
#0 ap_return_125_preg = 1'd0;
#0 ap_return_126_preg = 1'd0;
#0 ap_return_127_preg = 1'd0;
#0 ap_return_128_preg = 1'd0;
#0 ap_return_129_preg = 1'd0;
#0 ap_return_130_preg = 1'd0;
#0 ap_return_131_preg = 1'd0;
end

TI_Simon_TopModule_tick_dp call_ret_tick_dp_fu_1157(
    .ap_ready(call_ret_tick_dp_fu_1157_ap_ready),
    .this_data_ina_V_read(p_read),
    .this_data_inb_V_read(p_read1),
    .this_data_inc_V_read(p_read2),
    .this_key_ina_V_read(p_read178),
    .this_key_inb_V_read(p_read208),
    .this_key_inc_V_read(this_k3_key_out_read),
    .this_data_rdy_V_read(p_read3),
    .this_round_counter_V_read(p_read177),
    .this_round_num_V_read(my_simon_core_k1_round_counter_constprop_i),
    .this_shifter1a_V_read(this_dp_shifter1a_read),
    .this_shifter1b_V_read(this_dp_shifter1b_read),
    .this_shifter1c_V_read(this_dp_shifter1c_read),
    .this_shifter2a_V_read(this_dp_shifter2a_read),
    .this_shifter2b_V_read(this_dp_shifter2b_read),
    .this_shifter2c_V_read(this_dp_shifter2c_read),
    .this_shift_in1a_V_read(this_dp_shift_in1a_read),
    .this_shift_in1b_V_read(this_dp_shift_in1b_read),
    .this_shift_in1c_V_read(this_dp_shift_in1c_read),
    .this_shift_in2a_V_read(this_dp_shift_in2a_read),
    .this_shift_in2b_V_read(this_dp_shift_in2b_read),
    .this_shift_in2c_V_read(this_dp_shift_in2c_read),
    .this_shifter_enable1a_V_read(this_dp_shifter_enable1a_read),
    .this_shifter_enable1b_V_read(this_dp_shifter_enable1b_read),
    .this_shifter_enable1c_V_read(this_dp_shifter_enable1c_read),
    .this_shifter_enable2a_V_read(this_dp_shifter_enable2a_read),
    .this_shifter_enable2b_V_read(this_dp_shifter_enable2b_read),
    .this_shifter_enable2c_V_read(this_dp_shifter_enable2c_read),
    .this_fifo_ff63a_V_read(this_dp_fifo_ff63a_read),
    .this_fifo_ff62a_V_read(this_dp_fifo_ff62a_read),
    .this_fifo_ff61a_V_read(this_dp_fifo_ff61a_read),
    .this_fifo_ff60a_V_read(this_dp_fifo_ff60a_read),
    .this_fifo_ff59a_V_read(this_dp_fifo_ff59a_read),
    .this_fifo_ff58a_V_read(this_dp_fifo_ff58a_read),
    .this_fifo_ff57a_V_read(this_dp_fifo_ff57a_read),
    .this_fifo_ff56a_V_read(this_dp_fifo_ff56a_read),
    .this_lut_ff63a_V_read(this_dp_lut_ff63a_read),
    .this_lut_ff62a_V_read(this_dp_lut_ff62a_read),
    .this_lut_ff61a_V_read(this_dp_lut_ff61a_read),
    .this_lut_ff60a_V_read(this_dp_lut_ff60a_read),
    .this_lut_ff59a_V_read(this_dp_lut_ff59a_read),
    .this_lut_ff58a_V_read(this_dp_lut_ff58a_read),
    .this_lut_ff57a_V_read(this_dp_lut_ff57a_read),
    .this_fifo_ff63b_V_read(this_dp_fifo_ff63b_read),
    .this_fifo_ff62b_V_read(this_dp_fifo_ff62b_read),
    .this_fifo_ff61b_V_read(this_dp_fifo_ff61b_read),
    .this_fifo_ff60b_V_read(this_dp_fifo_ff60b_read),
    .this_fifo_ff59b_V_read(this_dp_fifo_ff59b_read),
    .this_fifo_ff58b_V_read(this_dp_fifo_ff58b_read),
    .this_fifo_ff57b_V_read(this_dp_fifo_ff57b_read),
    .this_fifo_ff56b_V_read(this_dp_fifo_ff56b_read),
    .this_lut_ff63b_V_read(this_dp_lut_ff63b_read),
    .this_lut_ff62b_V_read(this_dp_lut_ff62b_read),
    .this_lut_ff61b_V_read(this_dp_lut_ff61b_read),
    .this_lut_ff60b_V_read(this_dp_lut_ff60b_read),
    .this_lut_ff59b_V_read(this_dp_lut_ff59b_read),
    .this_lut_ff58b_V_read(this_dp_lut_ff58b_read),
    .this_lut_ff57b_V_read(this_dp_lut_ff57b_read),
    .this_fifo_ff63c_V_read(this_dp_fifo_ff63c_read),
    .this_fifo_ff62c_V_read(this_dp_fifo_ff62c_read),
    .this_fifo_ff61c_V_read(this_dp_fifo_ff61c_read),
    .this_fifo_ff60c_V_read(this_dp_fifo_ff60c_read),
    .this_fifo_ff59c_V_read(this_dp_fifo_ff59c_read),
    .this_fifo_ff58c_V_read(this_dp_fifo_ff58c_read),
    .this_fifo_ff57c_V_read(this_dp_fifo_ff57c_read),
    .this_fifo_ff56c_V_read(this_dp_fifo_ff56c_read),
    .this_lut_ff63c_V_read(this_dp_lut_ff63c_read),
    .this_lut_ff62c_V_read(this_dp_lut_ff62c_read),
    .this_lut_ff61c_V_read(this_dp_lut_ff61c_read),
    .this_lut_ff60c_V_read(this_dp_lut_ff60c_read),
    .this_lut_ff59c_V_read(this_dp_lut_ff59c_read),
    .this_lut_ff58c_V_read(this_dp_lut_ff58c_read),
    .this_lut_ff57c_V_read(this_dp_lut_ff57c_read),
    .this_lut_ff_inputa_V_read(this_dp_lut_ff_inputa_read),
    .this_fifo_ff_inputa_V_read(this_dp_fifo_ff_inputa_read),
    .this_lut_ff_inputb_V_read(this_dp_lut_ff_inputb_read),
    .this_fifo_ff_inputb_V_read(this_dp_fifo_ff_inputb_read),
    .this_lut_ff_inputc_V_read(this_dp_lut_ff_inputc_read),
    .this_fifo_ff_inputc_V_read(this_dp_fifo_ff_inputc_read),
    .this_s1_V_read(this_dp_s1_read),
    .this_s4_V_read(this_dp_s4_read),
    .this_s5_V_read(this_dp_s5_read),
    .this_s6_V_read(this_dp_s6_read),
    .this_s7_V_read(this_dp_s7_read),
    .this_s3_V_read(this_dp_s3_read),
    .this_lut_outa_V_read(this_dp_lut_outa_read),
    .this_lut_outb_V_read(this_dp_lut_outb_read),
    .this_lut_outc_V_read(this_dp_lut_outc_read),
    .my_simon_core_dp_bit_counter_constprop_i(my_simon_core_dp_bit_counter_constprop_i),
    .my_simon_core_dp_bit_counter_constprop_o(call_ret_tick_dp_fu_1157_my_simon_core_dp_bit_counter_constprop_o),
    .my_simon_core_dp_bit_counter_constprop_o_ap_vld(call_ret_tick_dp_fu_1157_my_simon_core_dp_bit_counter_constprop_o_ap_vld),
    .my_simon_core_dp_couta_constprop(call_ret_tick_dp_fu_1157_my_simon_core_dp_couta_constprop),
    .my_simon_core_dp_couta_constprop_ap_vld(call_ret_tick_dp_fu_1157_my_simon_core_dp_couta_constprop_ap_vld),
    .my_simon_core_dp_coutb_constprop(call_ret_tick_dp_fu_1157_my_simon_core_dp_coutb_constprop),
    .my_simon_core_dp_coutb_constprop_ap_vld(call_ret_tick_dp_fu_1157_my_simon_core_dp_coutb_constprop_ap_vld),
    .my_simon_core_dp_coutc_constprop(call_ret_tick_dp_fu_1157_my_simon_core_dp_coutc_constprop),
    .my_simon_core_dp_coutc_constprop_ap_vld(call_ret_tick_dp_fu_1157_my_simon_core_dp_coutc_constprop_ap_vld),
    .ap_return_0(call_ret_tick_dp_fu_1157_ap_return_0),
    .ap_return_1(call_ret_tick_dp_fu_1157_ap_return_1),
    .ap_return_2(call_ret_tick_dp_fu_1157_ap_return_2),
    .ap_return_3(call_ret_tick_dp_fu_1157_ap_return_3),
    .ap_return_4(call_ret_tick_dp_fu_1157_ap_return_4),
    .ap_return_5(call_ret_tick_dp_fu_1157_ap_return_5),
    .ap_return_6(call_ret_tick_dp_fu_1157_ap_return_6),
    .ap_return_7(call_ret_tick_dp_fu_1157_ap_return_7),
    .ap_return_8(call_ret_tick_dp_fu_1157_ap_return_8),
    .ap_return_9(call_ret_tick_dp_fu_1157_ap_return_9),
    .ap_return_10(call_ret_tick_dp_fu_1157_ap_return_10),
    .ap_return_11(call_ret_tick_dp_fu_1157_ap_return_11),
    .ap_return_12(call_ret_tick_dp_fu_1157_ap_return_12),
    .ap_return_13(call_ret_tick_dp_fu_1157_ap_return_13),
    .ap_return_14(call_ret_tick_dp_fu_1157_ap_return_14),
    .ap_return_15(call_ret_tick_dp_fu_1157_ap_return_15),
    .ap_return_16(call_ret_tick_dp_fu_1157_ap_return_16),
    .ap_return_17(call_ret_tick_dp_fu_1157_ap_return_17),
    .ap_return_18(call_ret_tick_dp_fu_1157_ap_return_18),
    .ap_return_19(call_ret_tick_dp_fu_1157_ap_return_19),
    .ap_return_20(call_ret_tick_dp_fu_1157_ap_return_20),
    .ap_return_21(call_ret_tick_dp_fu_1157_ap_return_21),
    .ap_return_22(call_ret_tick_dp_fu_1157_ap_return_22),
    .ap_return_23(call_ret_tick_dp_fu_1157_ap_return_23),
    .ap_return_24(call_ret_tick_dp_fu_1157_ap_return_24),
    .ap_return_25(call_ret_tick_dp_fu_1157_ap_return_25),
    .ap_return_26(call_ret_tick_dp_fu_1157_ap_return_26),
    .ap_return_27(call_ret_tick_dp_fu_1157_ap_return_27),
    .ap_return_28(call_ret_tick_dp_fu_1157_ap_return_28),
    .ap_return_29(call_ret_tick_dp_fu_1157_ap_return_29),
    .ap_return_30(call_ret_tick_dp_fu_1157_ap_return_30),
    .ap_return_31(call_ret_tick_dp_fu_1157_ap_return_31),
    .ap_return_32(call_ret_tick_dp_fu_1157_ap_return_32),
    .ap_return_33(call_ret_tick_dp_fu_1157_ap_return_33),
    .ap_return_34(call_ret_tick_dp_fu_1157_ap_return_34),
    .ap_return_35(call_ret_tick_dp_fu_1157_ap_return_35),
    .ap_return_36(call_ret_tick_dp_fu_1157_ap_return_36),
    .ap_return_37(call_ret_tick_dp_fu_1157_ap_return_37),
    .ap_return_38(call_ret_tick_dp_fu_1157_ap_return_38),
    .ap_return_39(call_ret_tick_dp_fu_1157_ap_return_39),
    .ap_return_40(call_ret_tick_dp_fu_1157_ap_return_40),
    .ap_return_41(call_ret_tick_dp_fu_1157_ap_return_41),
    .ap_return_42(call_ret_tick_dp_fu_1157_ap_return_42),
    .ap_return_43(call_ret_tick_dp_fu_1157_ap_return_43),
    .ap_return_44(call_ret_tick_dp_fu_1157_ap_return_44),
    .ap_return_45(call_ret_tick_dp_fu_1157_ap_return_45),
    .ap_return_46(call_ret_tick_dp_fu_1157_ap_return_46),
    .ap_return_47(call_ret_tick_dp_fu_1157_ap_return_47),
    .ap_return_48(call_ret_tick_dp_fu_1157_ap_return_48),
    .ap_return_49(call_ret_tick_dp_fu_1157_ap_return_49),
    .ap_return_50(call_ret_tick_dp_fu_1157_ap_return_50),
    .ap_return_51(call_ret_tick_dp_fu_1157_ap_return_51),
    .ap_return_52(call_ret_tick_dp_fu_1157_ap_return_52),
    .ap_return_53(call_ret_tick_dp_fu_1157_ap_return_53),
    .ap_return_54(call_ret_tick_dp_fu_1157_ap_return_54),
    .ap_return_55(call_ret_tick_dp_fu_1157_ap_return_55),
    .ap_return_56(call_ret_tick_dp_fu_1157_ap_return_56),
    .ap_return_57(call_ret_tick_dp_fu_1157_ap_return_57),
    .ap_return_58(call_ret_tick_dp_fu_1157_ap_return_58),
    .ap_return_59(call_ret_tick_dp_fu_1157_ap_return_59),
    .ap_return_60(call_ret_tick_dp_fu_1157_ap_return_60),
    .ap_return_61(call_ret_tick_dp_fu_1157_ap_return_61),
    .ap_return_62(call_ret_tick_dp_fu_1157_ap_return_62),
    .ap_return_63(call_ret_tick_dp_fu_1157_ap_return_63),
    .ap_return_64(call_ret_tick_dp_fu_1157_ap_return_64),
    .ap_return_65(call_ret_tick_dp_fu_1157_ap_return_65),
    .ap_return_66(call_ret_tick_dp_fu_1157_ap_return_66),
    .ap_return_67(call_ret_tick_dp_fu_1157_ap_return_67),
    .ap_return_68(call_ret_tick_dp_fu_1157_ap_return_68),
    .ap_return_69(call_ret_tick_dp_fu_1157_ap_return_69),
    .ap_return_70(call_ret_tick_dp_fu_1157_ap_return_70),
    .ap_return_71(call_ret_tick_dp_fu_1157_ap_return_71),
    .ap_return_72(call_ret_tick_dp_fu_1157_ap_return_72),
    .ap_return_73(call_ret_tick_dp_fu_1157_ap_return_73),
    .ap_return_74(call_ret_tick_dp_fu_1157_ap_return_74),
    .ap_return_75(call_ret_tick_dp_fu_1157_ap_return_75),
    .ap_return_76(call_ret_tick_dp_fu_1157_ap_return_76),
    .ap_return_77(call_ret_tick_dp_fu_1157_ap_return_77)
);

TI_Simon_TopModule_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U92(
    .din0(1'd0),
    .din1(select_ln27_3_fu_1501_p3),
    .din2(select_ln27_3_fu_1501_p3),
    .din3(select_ln38_3_fu_1533_p3),
    .din4(p_read61),
    .dout(this_shift_in2_i_fu_1541_p6)
);

TI_Simon_TopModule_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U93(
    .din0(select_ln27_3_fu_1501_p3),
    .din1(p_read),
    .din2(p_read116),
    .din3(select_ln38_3_fu_1533_p3),
    .din4(p_read60),
    .dout(this_shift_in1_i_fu_1612_p6)
);

TI_Simon_TopModule_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U94(
    .din0(p_read218),
    .din1(p_read1),
    .din2(p_read119),
    .din3(this_shift_in1_i1_fu_1835_p4),
    .din4(p_read60),
    .dout(this_shift_in1_i1_fu_1835_p6)
);

TI_Simon_TopModule_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U95(
    .din0(p_read138),
    .din1(p_read2),
    .din2(this_k3_lut_out_read),
    .din3(this_k3_shift_in1_fu_1972_p4),
    .din4(p_read60),
    .dout(this_k3_shift_in1_fu_1972_p6)
);

TI_Simon_TopModule_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U96(
    .din0(1'd0),
    .din1(p_read218),
    .din2(p_read218),
    .din3(select_ln32_4_reg_3245),
    .din4(p_read61),
    .dout(this_shift_in2_i1_fu_2342_p6)
);

TI_Simon_TopModule_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U97(
    .din0(1'd0),
    .din1(p_read138),
    .din2(p_read138),
    .din3(select_ln32_3_reg_3306),
    .din4(p_read61),
    .dout(this_k3_shift_in2_fu_2352_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_0_preg <= my_simon_core_dp_couta_constprop_i;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_100_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_100_preg <= newret134_reg_3607;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_101_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_101_preg <= newret135_reg_3612;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_102_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_102_preg <= newret136_reg_3617;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_103_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_103_preg <= newret137_reg_3622;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_104_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_104_preg <= newret138_reg_3627;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_105_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_105_preg <= newret139_reg_3632;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_106_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_106_preg <= newret140_reg_3637;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_107_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_107_preg <= newret141_reg_3642;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_108_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_108_preg <= newret142_reg_3647;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_109_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_109_preg <= newret143_reg_3652;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_10_preg <= select_ln32_3_reg_3306;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_110_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_110_preg <= newret144_reg_3657;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_111_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_111_preg <= newret145_reg_3662;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_112_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_112_preg <= newret146_reg_3667;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_113_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_113_preg <= newret147_reg_3672;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_114_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_114_preg <= newret148_reg_3677;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_115_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_115_preg <= newret149_reg_3682;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_116_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_116_preg <= newret150_reg_3687;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_117_preg <= 2'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_117_preg <= newret151_reg_3692;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_118_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_118_preg <= newret152_reg_3697;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_119_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_119_preg <= newret153_reg_3702;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_11_preg <= select_ln32_2_reg_3301;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_120_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_120_preg <= newret154_reg_3707;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_121_preg <= 2'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_121_preg <= select_ln96_1_reg_3205;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_122_preg <= 2'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_122_preg <= select_ln58_reg_3190;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_123_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_123_preg <= tmp_14_reg_3210;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_124_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_124_preg <= tmp_14_reg_3210;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_125_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_125_preg <= tmp_14_reg_3210;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_126_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_126_preg <= this_shift_in1_i_reg_3200;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_127_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_127_preg <= this_shift_in2_i_reg_3185;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_128_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_128_preg <= ret_V_12_fu_2336_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_129_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_129_preg <= this_shift_in1_i1_reg_3266;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_12_preg <= select_ln32_1_reg_3296;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_130_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_130_preg <= this_shift_in2_i1_fu_2342_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_131_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_131_preg <= ret_V_13_reg_3271;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_13_preg <= select_ln32_reg_3291;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 7'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_14_preg <= p_Val2_6_reg_3113;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 7'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_15_preg <= my_simon_core_dp_bit_counter_constprop_load_reg_3040;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_16_preg <= p_Result_17_reg_3286;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_17_preg <= this_k3_shift_in1_reg_3312;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_18_preg <= this_k3_shift_in2_fu_2352_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_19_preg <= ret_V_reg_3317;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_1_preg <= my_simon_core_dp_coutb_constprop_i;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 56'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_20_preg <= newret_reg_3322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 56'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_21_preg <= newret78_reg_3327;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 56'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_22_preg <= newret79_reg_3332;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_23_preg <= newret80_reg_3337;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_24_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_24_preg <= newret81_reg_3342;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_25_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_25_preg <= newret82_reg_3347;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_26_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_26_preg <= newret83_reg_3352;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_27_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_27_preg <= newret84_reg_3357;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_28_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_28_preg <= newret85_reg_3362;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_29_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_29_preg <= newret86_reg_3367;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_2_preg <= my_simon_core_dp_coutc_constprop_i;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_30_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_30_preg <= newret87_reg_3372;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_31_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_31_preg <= newret88_reg_3377;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_32_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_32_preg <= newret89_reg_3382;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_33_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_33_preg <= newret90_reg_3387;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_34_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_34_preg <= newret91_reg_3392;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_35_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_35_preg <= newret92_reg_3397;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_36_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_36_preg <= newret93_reg_3402;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_37_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_37_preg <= newret94_reg_3407;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_38_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_38_preg <= newret95_reg_3412;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_39_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_39_preg <= newret96_reg_3417;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_3_preg <= and_ln18_1_reg_3108;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_40_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_40_preg <= newret97_reg_3422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_41_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_41_preg <= newret98_reg_3427;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_42_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_42_preg <= newret99_reg_3432;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_43_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_43_preg <= newret100_reg_3437;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_44_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_44_preg <= newret101_reg_3442;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_45_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_45_preg <= newret102_reg_3447;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_46_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_46_preg <= newret103_reg_3452;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_47_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_47_preg <= newret104_reg_3457;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_48_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_48_preg <= newret105_reg_3462;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_49_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_49_preg <= newret106_reg_3467;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 60'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_4_preg <= p_Val2_s_reg_3276;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_50_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_50_preg <= newret107_reg_3472;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_51_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_51_preg <= newret108_reg_3477;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_52_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_52_preg <= newret109_reg_3482;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_53_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_53_preg <= newret110_reg_3487;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_54_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_54_preg <= newret111_reg_3492;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_55_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_55_preg <= newret112_reg_3497;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_56_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_56_preg <= newret113_reg_3502;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_57_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_57_preg <= newret114_reg_3507;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_58_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_58_preg <= newret115_reg_3512;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_59_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_59_preg <= newret116_reg_3517;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_5_preg <= p_Val2_11_reg_3281;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_60_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_60_preg <= newret117_reg_3522;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_61_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_61_preg <= newret118_reg_3527;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_62_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_62_preg <= newret119_reg_3532;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_63_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_63_preg <= newret120_reg_3537;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_64_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_64_preg <= newret121_reg_3542;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_65_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_65_preg <= newret122_reg_3547;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_66_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_66_preg <= newret123_reg_3552;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_67_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_67_preg <= newret124_reg_3557;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_68_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_68_preg <= newret125_reg_3562;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_69_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_69_preg <= newret126_reg_3567;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_6_preg <= p_read138;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_70_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_70_preg <= newret127_reg_3572;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_71_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_71_preg <= p_Result_3_reg_3119;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_72_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_72_preg <= p_Result_15_reg_3139;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_73_preg <= 60'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_73_preg <= p_Val2_7_reg_3124;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_74_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_74_preg <= p_Val2_8_reg_3134;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_75_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_75_preg <= select_ln27_3_reg_3160;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_76_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_76_preg <= select_ln27_2_reg_3155;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_77_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_77_preg <= select_ln27_1_reg_3150;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_78_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_78_preg <= select_ln27_reg_3145;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_79_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_79_preg <= select_ln38_3_reg_3180;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_7_preg <= p_read139;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_80_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_80_preg <= select_ln38_2_reg_3175;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_81_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_81_preg <= select_ln38_1_reg_3170;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_82_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_82_preg <= select_ln38_reg_3165;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_83_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_83_preg <= p_Result_16_reg_3240;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_84_preg <= 60'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_84_preg <= p_Val2_9_reg_3230;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_85_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_85_preg <= p_Val2_10_reg_3235;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_86_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_86_preg <= p_read218;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_87_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_87_preg <= p_read219;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_88_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_88_preg <= p_read220;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_89_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_89_preg <= p_read221;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_8_preg <= p_read140;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_90_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_90_preg <= select_ln32_4_reg_3245;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_91_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_91_preg <= select_ln32_5_reg_3251;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_92_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_92_preg <= select_ln32_6_reg_3256;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_93_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_93_preg <= select_ln32_7_reg_3261;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_94_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_94_preg <= newret128_reg_3577;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_95_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_95_preg <= newret129_reg_3582;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_96_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_96_preg <= newret130_reg_3587;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_97_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_97_preg <= newret131_reg_3592;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_98_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_98_preg <= newret132_reg_3597;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_99_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_99_preg <= newret133_reg_3602;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_return_9_preg <= p_read141233;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((1'd0 == and_ln116_fu_1721_p2)) begin
            empty_reg_1148 <= my_simon_core_k1_round_counter_constprop_i;
        end else if ((1'd1 == and_ln116_fu_1721_p2)) begin
            empty_reg_1148 <= add_ln840_fu_1727_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        and_ln18_1_reg_3108 <= and_ln18_1_fu_1402_p2;
        icmp_ln1019_5_reg_3217 <= icmp_ln1019_5_fu_1716_p2;
        newret100_reg_3437 <= call_ret_tick_dp_fu_1157_ap_return_23;
        newret101_reg_3442 <= call_ret_tick_dp_fu_1157_ap_return_24;
        newret102_reg_3447 <= call_ret_tick_dp_fu_1157_ap_return_25;
        newret103_reg_3452 <= call_ret_tick_dp_fu_1157_ap_return_26;
        newret104_reg_3457 <= call_ret_tick_dp_fu_1157_ap_return_27;
        newret105_reg_3462 <= call_ret_tick_dp_fu_1157_ap_return_28;
        newret106_reg_3467 <= call_ret_tick_dp_fu_1157_ap_return_29;
        newret107_reg_3472 <= call_ret_tick_dp_fu_1157_ap_return_30;
        newret108_reg_3477 <= call_ret_tick_dp_fu_1157_ap_return_31;
        newret109_reg_3482 <= call_ret_tick_dp_fu_1157_ap_return_32;
        newret110_reg_3487 <= call_ret_tick_dp_fu_1157_ap_return_33;
        newret111_reg_3492 <= call_ret_tick_dp_fu_1157_ap_return_34;
        newret112_reg_3497 <= call_ret_tick_dp_fu_1157_ap_return_35;
        newret113_reg_3502 <= call_ret_tick_dp_fu_1157_ap_return_36;
        newret114_reg_3507 <= call_ret_tick_dp_fu_1157_ap_return_37;
        newret115_reg_3512 <= call_ret_tick_dp_fu_1157_ap_return_38;
        newret116_reg_3517 <= call_ret_tick_dp_fu_1157_ap_return_39;
        newret117_reg_3522 <= call_ret_tick_dp_fu_1157_ap_return_40;
        newret118_reg_3527 <= call_ret_tick_dp_fu_1157_ap_return_41;
        newret119_reg_3532 <= call_ret_tick_dp_fu_1157_ap_return_42;
        newret120_reg_3537 <= call_ret_tick_dp_fu_1157_ap_return_43;
        newret121_reg_3542 <= call_ret_tick_dp_fu_1157_ap_return_44;
        newret122_reg_3547 <= call_ret_tick_dp_fu_1157_ap_return_45;
        newret123_reg_3552 <= call_ret_tick_dp_fu_1157_ap_return_46;
        newret124_reg_3557 <= call_ret_tick_dp_fu_1157_ap_return_47;
        newret125_reg_3562 <= call_ret_tick_dp_fu_1157_ap_return_48;
        newret126_reg_3567 <= call_ret_tick_dp_fu_1157_ap_return_49;
        newret127_reg_3572 <= call_ret_tick_dp_fu_1157_ap_return_50;
        newret128_reg_3577 <= call_ret_tick_dp_fu_1157_ap_return_51;
        newret129_reg_3582 <= call_ret_tick_dp_fu_1157_ap_return_52;
        newret130_reg_3587 <= call_ret_tick_dp_fu_1157_ap_return_53;
        newret131_reg_3592 <= call_ret_tick_dp_fu_1157_ap_return_54;
        newret132_reg_3597 <= call_ret_tick_dp_fu_1157_ap_return_55;
        newret133_reg_3602 <= call_ret_tick_dp_fu_1157_ap_return_56;
        newret134_reg_3607 <= call_ret_tick_dp_fu_1157_ap_return_57;
        newret135_reg_3612 <= call_ret_tick_dp_fu_1157_ap_return_58;
        newret136_reg_3617 <= call_ret_tick_dp_fu_1157_ap_return_59;
        newret137_reg_3622 <= call_ret_tick_dp_fu_1157_ap_return_60;
        newret138_reg_3627 <= call_ret_tick_dp_fu_1157_ap_return_61;
        newret139_reg_3632 <= call_ret_tick_dp_fu_1157_ap_return_62;
        newret140_reg_3637 <= call_ret_tick_dp_fu_1157_ap_return_63;
        newret141_reg_3642 <= call_ret_tick_dp_fu_1157_ap_return_64;
        newret142_reg_3647 <= call_ret_tick_dp_fu_1157_ap_return_65;
        newret143_reg_3652 <= call_ret_tick_dp_fu_1157_ap_return_66;
        newret144_reg_3657 <= call_ret_tick_dp_fu_1157_ap_return_67;
        newret145_reg_3662 <= call_ret_tick_dp_fu_1157_ap_return_68;
        newret146_reg_3667 <= call_ret_tick_dp_fu_1157_ap_return_69;
        newret147_reg_3672 <= call_ret_tick_dp_fu_1157_ap_return_70;
        newret148_reg_3677 <= call_ret_tick_dp_fu_1157_ap_return_71;
        newret149_reg_3682 <= call_ret_tick_dp_fu_1157_ap_return_72;
        newret150_reg_3687 <= call_ret_tick_dp_fu_1157_ap_return_73;
        newret151_reg_3692 <= call_ret_tick_dp_fu_1157_ap_return_74;
        newret152_reg_3697 <= call_ret_tick_dp_fu_1157_ap_return_75;
        newret153_reg_3702 <= call_ret_tick_dp_fu_1157_ap_return_76;
        newret154_reg_3707 <= call_ret_tick_dp_fu_1157_ap_return_77;
        newret78_reg_3327 <= call_ret_tick_dp_fu_1157_ap_return_1;
        newret79_reg_3332 <= call_ret_tick_dp_fu_1157_ap_return_2;
        newret80_reg_3337 <= call_ret_tick_dp_fu_1157_ap_return_3;
        newret81_reg_3342 <= call_ret_tick_dp_fu_1157_ap_return_4;
        newret82_reg_3347 <= call_ret_tick_dp_fu_1157_ap_return_5;
        newret83_reg_3352 <= call_ret_tick_dp_fu_1157_ap_return_6;
        newret84_reg_3357 <= call_ret_tick_dp_fu_1157_ap_return_7;
        newret85_reg_3362 <= call_ret_tick_dp_fu_1157_ap_return_8;
        newret86_reg_3367 <= call_ret_tick_dp_fu_1157_ap_return_9;
        newret87_reg_3372 <= call_ret_tick_dp_fu_1157_ap_return_10;
        newret88_reg_3377 <= call_ret_tick_dp_fu_1157_ap_return_11;
        newret89_reg_3382 <= call_ret_tick_dp_fu_1157_ap_return_12;
        newret90_reg_3387 <= call_ret_tick_dp_fu_1157_ap_return_13;
        newret91_reg_3392 <= call_ret_tick_dp_fu_1157_ap_return_14;
        newret92_reg_3397 <= call_ret_tick_dp_fu_1157_ap_return_15;
        newret93_reg_3402 <= call_ret_tick_dp_fu_1157_ap_return_16;
        newret94_reg_3407 <= call_ret_tick_dp_fu_1157_ap_return_17;
        newret95_reg_3412 <= call_ret_tick_dp_fu_1157_ap_return_18;
        newret96_reg_3417 <= call_ret_tick_dp_fu_1157_ap_return_19;
        newret97_reg_3422 <= call_ret_tick_dp_fu_1157_ap_return_20;
        newret98_reg_3427 <= call_ret_tick_dp_fu_1157_ap_return_21;
        newret99_reg_3432 <= call_ret_tick_dp_fu_1157_ap_return_22;
        newret_reg_3322 <= call_ret_tick_dp_fu_1157_ap_return_0;
        p_Result_14_reg_3129 <= p_Result_14_fu_1443_p1;
        p_Result_15_reg_3139 <= p_Result_15_fu_1473_p1;
        p_Result_16_reg_3240 <= p_Result_16_fu_1791_p1;
        p_Result_17_reg_3286 <= p_Result_17_fu_1928_p1;
        p_Result_3_reg_3119 <= p_Result_3_fu_1413_p1;
        p_Val2_10_reg_3235 <= p_Val2_10_fu_1783_p3;
        p_Val2_11_reg_3281 <= p_Val2_11_fu_1920_p3;
        p_Val2_6_reg_3113 <= my_simon_core_k1_round_counter_constprop_i;
        p_Val2_7_reg_3124 <= p_Val2_7_fu_1435_p3;
        p_Val2_8_reg_3134 <= p_Val2_8_fu_1465_p3;
        p_Val2_9_reg_3230 <= p_Val2_9_fu_1757_p3;
        p_Val2_s_reg_3276 <= p_Val2_s_fu_1894_p3;
        ret_V_13_reg_3271 <= ret_V_13_fu_1870_p2;
        ret_V_reg_3317 <= ret_V_fu_1996_p2;
        rhs_V_15_reg_3195 <= rhs_V_15_fu_1604_p3;
        select_ln27_1_reg_3150 <= select_ln27_1_fu_1485_p3;
        select_ln27_2_reg_3155 <= select_ln27_2_fu_1493_p3;
        select_ln27_3_reg_3160 <= select_ln27_3_fu_1501_p3;
        select_ln27_reg_3145 <= select_ln27_fu_1477_p3;
        select_ln32_1_reg_3296 <= select_ln32_1_fu_1940_p3;
        select_ln32_2_reg_3301 <= select_ln32_2_fu_1948_p3;
        select_ln32_3_reg_3306 <= select_ln32_3_fu_1956_p3;
        select_ln32_4_reg_3245 <= select_ln32_4_fu_1795_p3;
        select_ln32_5_reg_3251 <= select_ln32_5_fu_1803_p3;
        select_ln32_6_reg_3256 <= select_ln32_6_fu_1811_p3;
        select_ln32_7_reg_3261 <= select_ln32_7_fu_1819_p3;
        select_ln32_reg_3291 <= select_ln32_fu_1932_p3;
        select_ln38_1_reg_3170 <= select_ln38_1_fu_1517_p3;
        select_ln38_2_reg_3175 <= select_ln38_2_fu_1525_p3;
        select_ln38_3_reg_3180 <= select_ln38_3_fu_1533_p3;
        select_ln38_reg_3165 <= select_ln38_fu_1509_p3;
        select_ln58_reg_3190 <= select_ln58_fu_1596_p3;
        select_ln96_1_reg_3205 <= select_ln96_1_fu_1700_p3;
        this_k3_shift_in1_reg_3312 <= this_k3_shift_in1_fu_1972_p6;
        this_shift_in1_i1_reg_3266 <= this_shift_in1_i1_fu_1835_p6;
        this_shift_in1_i_reg_3200 <= this_shift_in1_i_fu_1612_p6;
        this_shift_in2_i_reg_3185 <= this_shift_in2_i_fu_1541_p6;
        tmp_14_reg_3210 <= p_read3[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln1027_1_reg_3052 <= icmp_ln1027_1_fu_1372_p2;
        icmp_ln1035_reg_3047 <= icmp_ln1035_fu_1356_p2;
        my_simon_core_dp_bit_counter_constprop_load_reg_3040 <= my_simon_core_dp_bit_counter_constprop_i;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_0 = my_simon_core_dp_couta_constprop_i;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_1 = my_simon_core_dp_coutb_constprop_i;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_10 = select_ln32_3_reg_3306;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_100 = newret134_reg_3607;
    end else begin
        ap_return_100 = ap_return_100_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_101 = newret135_reg_3612;
    end else begin
        ap_return_101 = ap_return_101_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_102 = newret136_reg_3617;
    end else begin
        ap_return_102 = ap_return_102_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_103 = newret137_reg_3622;
    end else begin
        ap_return_103 = ap_return_103_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_104 = newret138_reg_3627;
    end else begin
        ap_return_104 = ap_return_104_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_105 = newret139_reg_3632;
    end else begin
        ap_return_105 = ap_return_105_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_106 = newret140_reg_3637;
    end else begin
        ap_return_106 = ap_return_106_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_107 = newret141_reg_3642;
    end else begin
        ap_return_107 = ap_return_107_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_108 = newret142_reg_3647;
    end else begin
        ap_return_108 = ap_return_108_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_109 = newret143_reg_3652;
    end else begin
        ap_return_109 = ap_return_109_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_11 = select_ln32_2_reg_3301;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_110 = newret144_reg_3657;
    end else begin
        ap_return_110 = ap_return_110_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_111 = newret145_reg_3662;
    end else begin
        ap_return_111 = ap_return_111_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_112 = newret146_reg_3667;
    end else begin
        ap_return_112 = ap_return_112_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_113 = newret147_reg_3672;
    end else begin
        ap_return_113 = ap_return_113_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_114 = newret148_reg_3677;
    end else begin
        ap_return_114 = ap_return_114_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_115 = newret149_reg_3682;
    end else begin
        ap_return_115 = ap_return_115_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_116 = newret150_reg_3687;
    end else begin
        ap_return_116 = ap_return_116_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_117 = newret151_reg_3692;
    end else begin
        ap_return_117 = ap_return_117_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_118 = newret152_reg_3697;
    end else begin
        ap_return_118 = ap_return_118_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_119 = newret153_reg_3702;
    end else begin
        ap_return_119 = ap_return_119_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_12 = select_ln32_1_reg_3296;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_120 = newret154_reg_3707;
    end else begin
        ap_return_120 = ap_return_120_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_121 = select_ln96_1_reg_3205;
    end else begin
        ap_return_121 = ap_return_121_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_122 = select_ln58_reg_3190;
    end else begin
        ap_return_122 = ap_return_122_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_123 = tmp_14_reg_3210;
    end else begin
        ap_return_123 = ap_return_123_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_124 = tmp_14_reg_3210;
    end else begin
        ap_return_124 = ap_return_124_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_125 = tmp_14_reg_3210;
    end else begin
        ap_return_125 = ap_return_125_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_126 = this_shift_in1_i_reg_3200;
    end else begin
        ap_return_126 = ap_return_126_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_127 = this_shift_in2_i_reg_3185;
    end else begin
        ap_return_127 = ap_return_127_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_128 = ret_V_12_fu_2336_p2;
    end else begin
        ap_return_128 = ap_return_128_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_129 = this_shift_in1_i1_reg_3266;
    end else begin
        ap_return_129 = ap_return_129_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_13 = select_ln32_reg_3291;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_130 = this_shift_in2_i1_fu_2342_p6;
    end else begin
        ap_return_130 = ap_return_130_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_131 = ret_V_13_reg_3271;
    end else begin
        ap_return_131 = ap_return_131_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_14 = p_Val2_6_reg_3113;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_15 = my_simon_core_dp_bit_counter_constprop_load_reg_3040;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_16 = p_Result_17_reg_3286;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_17 = this_k3_shift_in1_reg_3312;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_18 = this_k3_shift_in2_fu_2352_p6;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_19 = ret_V_reg_3317;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_2 = my_simon_core_dp_coutc_constprop_i;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_20 = newret_reg_3322;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_21 = newret78_reg_3327;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_22 = newret79_reg_3332;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_23 = newret80_reg_3337;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_24 = newret81_reg_3342;
    end else begin
        ap_return_24 = ap_return_24_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_25 = newret82_reg_3347;
    end else begin
        ap_return_25 = ap_return_25_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_26 = newret83_reg_3352;
    end else begin
        ap_return_26 = ap_return_26_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_27 = newret84_reg_3357;
    end else begin
        ap_return_27 = ap_return_27_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_28 = newret85_reg_3362;
    end else begin
        ap_return_28 = ap_return_28_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_29 = newret86_reg_3367;
    end else begin
        ap_return_29 = ap_return_29_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_3 = and_ln18_1_reg_3108;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_30 = newret87_reg_3372;
    end else begin
        ap_return_30 = ap_return_30_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_31 = newret88_reg_3377;
    end else begin
        ap_return_31 = ap_return_31_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_32 = newret89_reg_3382;
    end else begin
        ap_return_32 = ap_return_32_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_33 = newret90_reg_3387;
    end else begin
        ap_return_33 = ap_return_33_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_34 = newret91_reg_3392;
    end else begin
        ap_return_34 = ap_return_34_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_35 = newret92_reg_3397;
    end else begin
        ap_return_35 = ap_return_35_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_36 = newret93_reg_3402;
    end else begin
        ap_return_36 = ap_return_36_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_37 = newret94_reg_3407;
    end else begin
        ap_return_37 = ap_return_37_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_38 = newret95_reg_3412;
    end else begin
        ap_return_38 = ap_return_38_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_39 = newret96_reg_3417;
    end else begin
        ap_return_39 = ap_return_39_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_4 = p_Val2_s_reg_3276;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_40 = newret97_reg_3422;
    end else begin
        ap_return_40 = ap_return_40_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_41 = newret98_reg_3427;
    end else begin
        ap_return_41 = ap_return_41_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_42 = newret99_reg_3432;
    end else begin
        ap_return_42 = ap_return_42_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_43 = newret100_reg_3437;
    end else begin
        ap_return_43 = ap_return_43_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_44 = newret101_reg_3442;
    end else begin
        ap_return_44 = ap_return_44_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_45 = newret102_reg_3447;
    end else begin
        ap_return_45 = ap_return_45_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_46 = newret103_reg_3452;
    end else begin
        ap_return_46 = ap_return_46_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_47 = newret104_reg_3457;
    end else begin
        ap_return_47 = ap_return_47_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_48 = newret105_reg_3462;
    end else begin
        ap_return_48 = ap_return_48_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_49 = newret106_reg_3467;
    end else begin
        ap_return_49 = ap_return_49_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_5 = p_Val2_11_reg_3281;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_50 = newret107_reg_3472;
    end else begin
        ap_return_50 = ap_return_50_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_51 = newret108_reg_3477;
    end else begin
        ap_return_51 = ap_return_51_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_52 = newret109_reg_3482;
    end else begin
        ap_return_52 = ap_return_52_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_53 = newret110_reg_3487;
    end else begin
        ap_return_53 = ap_return_53_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_54 = newret111_reg_3492;
    end else begin
        ap_return_54 = ap_return_54_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_55 = newret112_reg_3497;
    end else begin
        ap_return_55 = ap_return_55_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_56 = newret113_reg_3502;
    end else begin
        ap_return_56 = ap_return_56_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_57 = newret114_reg_3507;
    end else begin
        ap_return_57 = ap_return_57_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_58 = newret115_reg_3512;
    end else begin
        ap_return_58 = ap_return_58_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_59 = newret116_reg_3517;
    end else begin
        ap_return_59 = ap_return_59_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_6 = p_read138;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_60 = newret117_reg_3522;
    end else begin
        ap_return_60 = ap_return_60_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_61 = newret118_reg_3527;
    end else begin
        ap_return_61 = ap_return_61_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_62 = newret119_reg_3532;
    end else begin
        ap_return_62 = ap_return_62_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_63 = newret120_reg_3537;
    end else begin
        ap_return_63 = ap_return_63_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_64 = newret121_reg_3542;
    end else begin
        ap_return_64 = ap_return_64_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_65 = newret122_reg_3547;
    end else begin
        ap_return_65 = ap_return_65_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_66 = newret123_reg_3552;
    end else begin
        ap_return_66 = ap_return_66_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_67 = newret124_reg_3557;
    end else begin
        ap_return_67 = ap_return_67_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_68 = newret125_reg_3562;
    end else begin
        ap_return_68 = ap_return_68_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_69 = newret126_reg_3567;
    end else begin
        ap_return_69 = ap_return_69_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_7 = p_read139;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_70 = newret127_reg_3572;
    end else begin
        ap_return_70 = ap_return_70_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_71 = p_Result_3_reg_3119;
    end else begin
        ap_return_71 = ap_return_71_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_72 = p_Result_15_reg_3139;
    end else begin
        ap_return_72 = ap_return_72_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_73 = p_Val2_7_reg_3124;
    end else begin
        ap_return_73 = ap_return_73_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_74 = p_Val2_8_reg_3134;
    end else begin
        ap_return_74 = ap_return_74_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_75 = select_ln27_3_reg_3160;
    end else begin
        ap_return_75 = ap_return_75_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_76 = select_ln27_2_reg_3155;
    end else begin
        ap_return_76 = ap_return_76_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_77 = select_ln27_1_reg_3150;
    end else begin
        ap_return_77 = ap_return_77_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_78 = select_ln27_reg_3145;
    end else begin
        ap_return_78 = ap_return_78_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_79 = select_ln38_3_reg_3180;
    end else begin
        ap_return_79 = ap_return_79_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_8 = p_read140;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_80 = select_ln38_2_reg_3175;
    end else begin
        ap_return_80 = ap_return_80_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_81 = select_ln38_1_reg_3170;
    end else begin
        ap_return_81 = ap_return_81_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_82 = select_ln38_reg_3165;
    end else begin
        ap_return_82 = ap_return_82_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_83 = p_Result_16_reg_3240;
    end else begin
        ap_return_83 = ap_return_83_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_84 = p_Val2_9_reg_3230;
    end else begin
        ap_return_84 = ap_return_84_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_85 = p_Val2_10_reg_3235;
    end else begin
        ap_return_85 = ap_return_85_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_86 = p_read218;
    end else begin
        ap_return_86 = ap_return_86_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_87 = p_read219;
    end else begin
        ap_return_87 = ap_return_87_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_88 = p_read220;
    end else begin
        ap_return_88 = ap_return_88_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_89 = p_read221;
    end else begin
        ap_return_89 = ap_return_89_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_9 = p_read141233;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_90 = select_ln32_4_reg_3245;
    end else begin
        ap_return_90 = ap_return_90_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_91 = select_ln32_5_reg_3251;
    end else begin
        ap_return_91 = ap_return_91_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_92 = select_ln32_6_reg_3256;
    end else begin
        ap_return_92 = ap_return_92_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_93 = select_ln32_7_reg_3261;
    end else begin
        ap_return_93 = ap_return_93_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_94 = newret128_reg_3577;
    end else begin
        ap_return_94 = ap_return_94_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_95 = newret129_reg_3582;
    end else begin
        ap_return_95 = ap_return_95_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_96 = newret130_reg_3587;
    end else begin
        ap_return_96 = ap_return_96_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_97 = newret131_reg_3592;
    end else begin
        ap_return_97 = ap_return_97_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_98 = newret132_reg_3597;
    end else begin
        ap_return_98 = ap_return_98_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_return_99 = newret133_reg_3602;
    end else begin
        ap_return_99 = ap_return_99_preg;
    end
end

always @ (*) begin
    if (((call_ret_tick_dp_fu_1157_my_simon_core_dp_bit_counter_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        my_simon_core_dp_bit_counter_constprop_o = call_ret_tick_dp_fu_1157_my_simon_core_dp_bit_counter_constprop_o;
    end else begin
        my_simon_core_dp_bit_counter_constprop_o = my_simon_core_dp_bit_counter_constprop_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        my_simon_core_dp_bit_counter_constprop_o_ap_vld = call_ret_tick_dp_fu_1157_my_simon_core_dp_bit_counter_constprop_o_ap_vld;
    end else begin
        my_simon_core_dp_bit_counter_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((call_ret_tick_dp_fu_1157_my_simon_core_dp_couta_constprop_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        my_simon_core_dp_couta_constprop_o = call_ret_tick_dp_fu_1157_my_simon_core_dp_couta_constprop;
    end else begin
        my_simon_core_dp_couta_constprop_o = my_simon_core_dp_couta_constprop_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        my_simon_core_dp_couta_constprop_o_ap_vld = call_ret_tick_dp_fu_1157_my_simon_core_dp_couta_constprop_ap_vld;
    end else begin
        my_simon_core_dp_couta_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((call_ret_tick_dp_fu_1157_my_simon_core_dp_coutb_constprop_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        my_simon_core_dp_coutb_constprop_o = call_ret_tick_dp_fu_1157_my_simon_core_dp_coutb_constprop;
    end else begin
        my_simon_core_dp_coutb_constprop_o = my_simon_core_dp_coutb_constprop_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        my_simon_core_dp_coutb_constprop_o_ap_vld = call_ret_tick_dp_fu_1157_my_simon_core_dp_coutb_constprop_ap_vld;
    end else begin
        my_simon_core_dp_coutb_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((call_ret_tick_dp_fu_1157_my_simon_core_dp_coutc_constprop_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        my_simon_core_dp_coutc_constprop_o = call_ret_tick_dp_fu_1157_my_simon_core_dp_coutc_constprop;
    end else begin
        my_simon_core_dp_coutc_constprop_o = my_simon_core_dp_coutc_constprop_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        my_simon_core_dp_coutc_constprop_o_ap_vld = call_ret_tick_dp_fu_1157_my_simon_core_dp_coutc_constprop_ap_vld;
    end else begin
        my_simon_core_dp_coutc_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln116_fu_1721_p2) & (1'b1 == ap_CS_fsm_state2))) begin
        my_simon_core_k1_round_counter_constprop_o = add_ln840_fu_1727_p2;
    end else begin
        my_simon_core_k1_round_counter_constprop_o = my_simon_core_k1_round_counter_constprop_i;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln116_fu_1721_p2) & (1'b1 == ap_CS_fsm_state2))) begin
        my_simon_core_k1_round_counter_constprop_o_ap_vld = 1'b1;
    end else begin
        my_simon_core_k1_round_counter_constprop_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln840_fu_1727_p2 = (my_simon_core_k1_round_counter_constprop_i + 7'd1);

assign and_ln1019_fu_1643_p2 = (xor_ln1019_fu_1637_p2 & icmp_ln1019_fu_1378_p2);

assign and_ln116_fu_1721_p2 = (icmp_ln1019_fu_1378_p2 & icmp_ln1019_5_fu_1716_p2);

assign and_ln18_1_fu_1402_p2 = (icmp_ln1019_fu_1378_p2 & and_ln18_fu_1396_p2);

assign and_ln18_fu_1396_p2 = (icmp_ln1019_3_fu_1390_p2 & icmp_ln1019_2_fu_1384_p2);

assign and_ln94_1_fu_1649_p2 = (and_ln94_fu_1626_p2 & and_ln1019_fu_1643_p2);

assign and_ln94_fu_1626_p2 = (icmp_ln1027_fu_1577_p2 & icmp_ln1027_1_reg_3052);

assign and_ln96_1_fu_1667_p2 = (icmp_ln1035_1_fu_1631_p2 & icmp_ln1027_1_reg_3052);

assign and_ln96_2_fu_1672_p2 = (and_ln96_fu_1661_p2 & and_ln96_1_fu_1667_p2);

assign and_ln96_fu_1661_p2 = (xor_ln94_fu_1655_p2 & and_ln1019_fu_1643_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign icmp_ln1019_2_fu_1384_p2 = ((this_round_counter_read == 7'd67) ? 1'b1 : 1'b0);

assign icmp_ln1019_3_fu_1390_p2 = ((this_bit_counter_read == 7'd62) ? 1'b1 : 1'b0);

assign icmp_ln1019_4_fu_1555_p2 = ((p_read3 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1019_5_fu_1716_p2 = ((my_simon_core_dp_bit_counter_constprop_load_reg_3040 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln1019_fu_1378_p2 = ((p_read3 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln1027_1_fu_1372_p2 = ((tmp_13_fu_1362_p4 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_1577_p2 = ((my_simon_core_k1_round_counter_constprop_i == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln1035_1_fu_1631_p2 = ((my_simon_core_k1_round_counter_constprop_i != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_1356_p2 = ((tmp_fu_1346_p4 != 5'd0) ? 1'b1 : 1'b0);

assign or_ln58_fu_1567_p2 = (xor_ln58_fu_1561_p2 | icmp_ln1019_4_fu_1555_p2);

assign or_ln60_fu_1583_p2 = (icmp_ln1035_reg_3047 | icmp_ln1027_fu_1577_p2);

assign or_ln96_fu_1686_p2 = (and_ln96_2_fu_1672_p2 | and_ln94_1_fu_1649_p2);

assign p_Result_10_fu_1775_p3 = {{p_read118}, {tmp_i1_19_fu_1765_p4}};

assign p_Result_12_fu_1912_p3 = {{this_k3_shift_in2_read}, {tmp_s_fu_1902_p4}};

assign p_Result_14_fu_1443_p1 = p_Val2_7_fu_1435_p3[0:0];

assign p_Result_15_fu_1473_p1 = p_Val2_8_fu_1465_p3[0:0];

assign p_Result_16_fu_1791_p1 = p_Val2_10_fu_1783_p3[0:0];

assign p_Result_17_fu_1928_p1 = p_Val2_11_fu_1920_p3[0:0];

assign p_Result_3_fu_1413_p1 = my_simon_core_k1_round_counter_constprop_i[0:0];

assign p_Result_4_fu_1427_p3 = {{p_read66}, {tmp_i_fu_1417_p4}};

assign p_Result_6_fu_1457_p3 = {{p_read67}, {tmp_i_18_fu_1447_p4}};

assign p_Result_8_fu_2314_p3 = ap_const_lv68_0[empty_reg_1148];

assign p_Result_9_fu_1749_p3 = {{p_read117}, {tmp_i1_fu_1739_p4}};

assign p_Result_s_fu_1886_p3 = {{this_k3_shift_in1_read}, {tmp15_fu_1876_p4}};

assign p_Val2_10_fu_1783_p3 = ((p_read63[0:0] == 1'b1) ? p_Result_10_fu_1775_p3 : p_read210);

assign p_Val2_11_fu_1920_p3 = ((p_read63[0:0] == 1'b1) ? p_Result_12_fu_1912_p3 : p_read125);

assign p_Val2_7_fu_1435_p3 = ((p_read62[0:0] == 1'b1) ? p_Result_4_fu_1427_p3 : p_read187);

assign p_Val2_8_fu_1465_p3 = ((p_read63[0:0] == 1'b1) ? p_Result_6_fu_1457_p3 : p_read188);

assign p_Val2_9_fu_1757_p3 = ((p_read62[0:0] == 1'b1) ? p_Result_9_fu_1749_p3 : p_read209);

assign p_Val2_s_fu_1894_p3 = ((p_read62[0:0] == 1'b1) ? p_Result_s_fu_1886_p3 : p_read124230);

assign ret_V_12_fu_2336_p2 = (xor_ln1499_fu_2327_p2 ^ xor_ln1499_15_fu_2331_p2);

assign ret_V_13_fu_1870_p2 = (xor_ln1499_18_fu_1864_p2 ^ xor_ln1499_17_fu_1858_p2);

assign ret_V_fu_1996_p2 = (xor_ln1499_20_fu_1990_p2 ^ p_Result_17_fu_1928_p1);

assign rhs_V_15_fu_1604_p3 = ((p_read59[0:0] == 1'b1) ? select_ln38_fu_1509_p3 : select_ln27_fu_1477_p3);

assign rhs_V_17_fu_2322_p2 = (p_Result_8_fu_2314_p3 & icmp_ln1019_5_reg_3217);

assign rhs_V_18_fu_1827_p3 = ((p_read59[0:0] == 1'b1) ? select_ln32_7_fu_1819_p3 : p_read221);

assign rhs_V_19_fu_1849_p2 = ((my_simon_core_dp_bit_counter_constprop_load_reg_3040 != 7'd1) ? 1'b1 : 1'b0);

assign rhs_V_fu_1964_p3 = ((p_read59[0:0] == 1'b1) ? select_ln32_fu_1932_p3 : p_read141233);

assign select_ln27_1_fu_1485_p3 = ((p_read65[0:0] == 1'b1) ? p_read199 : p_read198);

assign select_ln27_2_fu_1493_p3 = ((p_read65[0:0] == 1'b1) ? p_read198 : p_read197);

assign select_ln27_3_fu_1501_p3 = ((p_read65[0:0] == 1'b1) ? p_read197 : p_read196);

assign select_ln27_fu_1477_p3 = ((p_read65[0:0] == 1'b1) ? p_Result_14_fu_1443_p1 : p_read199);

assign select_ln32_1_fu_1940_p3 = ((p_read64[0:0] == 1'b1) ? p_read145 : p_read144);

assign select_ln32_2_fu_1948_p3 = ((p_read64[0:0] == 1'b1) ? p_read144 : p_read143235);

assign select_ln32_3_fu_1956_p3 = ((p_read64[0:0] == 1'b1) ? p_read143235 : p_read142234);

assign select_ln32_4_fu_1795_p3 = ((p_read64[0:0] == 1'b1) ? p_read223 : p_read222);

assign select_ln32_5_fu_1803_p3 = ((p_read64[0:0] == 1'b1) ? p_read224 : p_read223);

assign select_ln32_6_fu_1811_p3 = ((p_read64[0:0] == 1'b1) ? p_read225 : p_read224);

assign select_ln32_7_fu_1819_p3 = ((p_read64[0:0] == 1'b1) ? p_read119 : p_read225);

assign select_ln32_fu_1932_p3 = ((p_read64[0:0] == 1'b1) ? this_k3_lut_out_read : p_read145);

assign select_ln38_1_fu_1517_p3 = ((p_read64[0:0] == 1'b1) ? p_read203 : p_read202);

assign select_ln38_2_fu_1525_p3 = ((p_read64[0:0] == 1'b1) ? p_read202 : p_read201);

assign select_ln38_3_fu_1533_p3 = ((p_read64[0:0] == 1'b1) ? p_read201 : p_read200);

assign select_ln38_fu_1509_p3 = ((p_read64[0:0] == 1'b1) ? p_read116 : p_read203);

assign select_ln58_fu_1596_p3 = ((or_ln58_fu_1567_p2[0:0] == 1'b1) ? zext_ln58_fu_1573_p1 : select_ln60_fu_1588_p3);

assign select_ln60_fu_1588_p3 = ((or_ln60_fu_1583_p2[0:0] == 1'b1) ? 2'd2 : 2'd3);

assign select_ln96_1_fu_1700_p3 = ((or_ln96_fu_1686_p2[0:0] == 1'b1) ? select_ln96_2_fu_1678_p3 : select_ln96_fu_1692_p3);

assign select_ln96_2_fu_1678_p3 = ((and_ln96_2_fu_1672_p2[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln96_fu_1692_p3 = ((icmp_ln1019_4_fu_1555_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign this_k3_shift_in1_fu_1972_p4 = ((p_read64[0:0] == 1'b1) ? p_read143235 : p_read142234);

assign this_shift_in1_i1_fu_1835_p4 = ((p_read64[0:0] == 1'b1) ? p_read223 : p_read222);

assign tmp15_fu_1876_p4 = {{p_read124230[59:1]}};

assign tmp_13_fu_1362_p4 = {{my_simon_core_dp_bit_counter_constprop_i[6:2]}};

assign tmp_fu_1346_p4 = {{my_simon_core_dp_bit_counter_constprop_i[6:2]}};

assign tmp_i1_19_fu_1765_p4 = {{p_read210[63:1]}};

assign tmp_i1_fu_1739_p4 = {{p_read209[59:1]}};

assign tmp_i_18_fu_1447_p4 = {{p_read188[63:1]}};

assign tmp_i_fu_1417_p4 = {{p_read187[59:1]}};

assign tmp_s_fu_1902_p4 = {{p_read125[63:1]}};

assign trunc_ln1499_3_fu_1986_p1 = p_Val2_s_fu_1894_p3[0:0];

assign trunc_ln1499_fu_1854_p1 = p_Val2_9_fu_1757_p3[0:0];

assign xor_ln1019_fu_1637_p2 = (icmp_ln1019_4_fu_1555_p2 ^ 1'd1);

assign xor_ln1499_15_fu_2331_p2 = (rhs_V_17_fu_2322_p2 ^ p_Result_14_reg_3129);

assign xor_ln1499_17_fu_1858_p2 = (rhs_V_18_fu_1827_p3 ^ p_Result_16_fu_1791_p1);

assign xor_ln1499_18_fu_1864_p2 = (trunc_ln1499_fu_1854_p1 ^ rhs_V_19_fu_1849_p2);

assign xor_ln1499_20_fu_1990_p2 = (trunc_ln1499_3_fu_1986_p1 ^ rhs_V_fu_1964_p3);

assign xor_ln1499_fu_2327_p2 = (rhs_V_15_reg_3195 ^ p_Result_15_reg_3139);

assign xor_ln58_fu_1561_p2 = (icmp_ln1019_fu_1378_p2 ^ 1'd1);

assign xor_ln94_fu_1655_p2 = (1'd1 ^ and_ln94_fu_1626_p2);

assign zext_ln58_fu_1573_p1 = icmp_ln1019_4_fu_1555_p2;

endmodule //TI_Simon_TopModule_tick
