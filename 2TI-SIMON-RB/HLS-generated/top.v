// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7s25-csga324-1I,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.497000,HLS_SYN_LAT=395,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1943,HLS_SYN_LUT=3271,HLS_VERSION=2022_2}" *)

module top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Din,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [767:0] Din;
output  [127:0] ap_return;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln230_fu_253_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [1:0] my_simon_core_data_rdy_V_fu_314_p3;
reg   [1:0] my_simon_core_data_rdy_V_reg_812;
wire    ap_block_pp0_stage0_11001;
wire    call_ret_update_fu_168_ap_ready;
wire   [0:0] call_ret_update_fu_168_p_read;
wire   [0:0] call_ret_update_fu_168_p_read1;
wire   [127:0] call_ret_update_fu_168_ap_return_0;
wire   [63:0] call_ret_update_fu_168_ap_return_1;
wire   [63:0] call_ret_update_fu_168_ap_return_2;
wire   [63:0] call_ret_update_fu_168_ap_return_3;
wire   [63:0] call_ret_update_fu_168_ap_return_4;
wire   [7:0] call_ret_update_fu_168_ap_return_5;
wire   [63:0] call_ret_update_fu_168_ap_return_6;
wire   [63:0] call_ret_update_fu_168_ap_return_7;
wire   [63:0] call_ret_update_fu_168_ap_return_8;
wire   [63:0] call_ret_update_fu_168_ap_return_9;
wire   [63:0] call_ret_update_fu_168_ap_return_10;
wire   [63:0] call_ret_update_fu_168_ap_return_11;
wire   [127:0] call_ret_update_fu_168_ap_return_12;
wire   [63:0] call_ret_update_fu_168_ap_return_13;
wire   [63:0] call_ret_update_fu_168_ap_return_14;
wire   [63:0] call_ret_update_fu_168_ap_return_15;
wire   [63:0] call_ret_update_fu_168_ap_return_16;
wire    ap_block_pp0_stage0;
reg   [126:0] phi_ln186_fu_74;
wire   [126:0] trunc_ln230_fu_559_p1;
reg   [126:0] ap_sig_allocacmp_phi_ln186_load;
reg   [255:0] p_Val2_s_fu_78;
wire   [255:0] p_Result_s_fu_424_p3;
wire    ap_loop_init;
reg   [255:0] p_Val2_2_fu_82;
wire   [255:0] p_Result_19_fu_450_p3;
reg   [255:0] p_Val2_3_fu_86;
wire   [255:0] p_Result_20_fu_476_p3;
wire   [255:0] share_c_V_fu_211_p1;
reg   [1:0] state_V_fu_90;
reg   [1:0] ap_sig_allocacmp_state_V_load;
reg   [8:0] count_fu_94;
wire   [8:0] count_2_fu_259_p2;
reg   [8:0] ap_sig_allocacmp_count_1;
reg   [127:0] my_simon_core_dp_cipher_out_V_1_fu_98;
reg   [7:0] my_simon_core_counter_V_1_fu_102;
reg   [63:0] my_simon_core_ks1_KX_V_1_fu_106;
reg   [63:0] my_simon_core_ks1_KY_V_1_fu_110;
reg   [63:0] my_simon_core_ks1_key_out_V_1_fu_114;
reg   [63:0] my_simon_core_ks2_KX_V_1_fu_118;
reg   [63:0] my_simon_core_ks2_KY_V_1_fu_122;
reg   [63:0] my_simon_core_ks2_key_out_V_1_fu_126;
reg   [63:0] my_simon_core_dp_share_a_X_V_1_fu_130;
reg   [63:0] my_simon_core_dp_share_a_Y_V_1_fu_134;
reg   [63:0] my_simon_core_dp_share_a_temp_V_1_fu_138;
reg   [63:0] my_simon_core_dp_share_a_Y_out_V_1_fu_142;
reg   [63:0] my_simon_core_dp_share_b_X_V_1_fu_146;
reg   [63:0] my_simon_core_dp_share_b_Y_V_1_fu_150;
reg   [63:0] my_simon_core_dp_share_b_temp_V_1_fu_154;
reg   [63:0] my_simon_core_dp_share_b_Y_out_V_1_fu_158;
wire   [0:0] icmp_ln1019_fu_268_p2;
wire   [0:0] icmp_ln235_fu_288_p2;
wire   [1:0] select_ln244_fu_274_p3;
wire   [0:0] icmp_ln235_1_fu_302_p2;
wire   [0:0] icmp_ln1019_1_fu_282_p2;
wire   [0:0] and_ln1019_fu_308_p2;
wire   [1:0] select_ln235_fu_294_p3;
wire   [254:0] tmp4_fu_405_p4;
wire   [254:0] tmp_s_fu_432_p4;
wire   [254:0] tmp_16_fu_458_p4;
wire   [0:0] tmp_1_fu_442_p3;
wire   [0:0] tmp_2_fu_468_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_135;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_update call_ret_update_fu_168(
    .ap_ready(call_ret_update_fu_168_ap_ready),
    .p_read(call_ret_update_fu_168_p_read),
    .p_read1(call_ret_update_fu_168_p_read1),
    .p_read2(my_simon_core_data_rdy_V_reg_812),
    .p_read3(my_simon_core_counter_V_1_fu_102),
    .p_read8(my_simon_core_ks1_KX_V_1_fu_106),
    .p_read9(my_simon_core_ks1_KY_V_1_fu_110),
    .this_ks1_key_out_read(my_simon_core_ks1_key_out_V_1_fu_114),
    .p_read16(my_simon_core_ks2_KX_V_1_fu_118),
    .p_read17(my_simon_core_ks2_KY_V_1_fu_122),
    .this_ks2_key_out_read(my_simon_core_ks2_key_out_V_1_fu_126),
    .p_read11(my_simon_core_dp_share_a_X_V_1_fu_130),
    .p_read12(my_simon_core_dp_share_a_Y_V_1_fu_134),
    .p_read18(my_simon_core_dp_share_a_temp_V_1_fu_138),
    .p_read20(my_simon_core_dp_share_a_Y_out_V_1_fu_142),
    .p_read38(my_simon_core_dp_share_b_X_V_1_fu_146),
    .p_read39(my_simon_core_dp_share_b_Y_V_1_fu_150),
    .p_read40(my_simon_core_dp_share_b_temp_V_1_fu_154),
    .p_read47(my_simon_core_dp_share_b_Y_out_V_1_fu_158),
    .this_dp_cipher_out_read(my_simon_core_dp_cipher_out_V_1_fu_98),
    .ap_return_0(call_ret_update_fu_168_ap_return_0),
    .ap_return_1(call_ret_update_fu_168_ap_return_1),
    .ap_return_2(call_ret_update_fu_168_ap_return_2),
    .ap_return_3(call_ret_update_fu_168_ap_return_3),
    .ap_return_4(call_ret_update_fu_168_ap_return_4),
    .ap_return_5(call_ret_update_fu_168_ap_return_5),
    .ap_return_6(call_ret_update_fu_168_ap_return_6),
    .ap_return_7(call_ret_update_fu_168_ap_return_7),
    .ap_return_8(call_ret_update_fu_168_ap_return_8),
    .ap_return_9(call_ret_update_fu_168_ap_return_9),
    .ap_return_10(call_ret_update_fu_168_ap_return_10),
    .ap_return_11(call_ret_update_fu_168_ap_return_11),
    .ap_return_12(call_ret_update_fu_168_ap_return_12),
    .ap_return_13(call_ret_update_fu_168_ap_return_13),
    .ap_return_14(call_ret_update_fu_168_ap_return_14),
    .ap_return_15(call_ret_update_fu_168_ap_return_15),
    .ap_return_16(call_ret_update_fu_168_ap_return_16)
);

top_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_135)) begin
        if ((icmp_ln230_fu_253_p2 == 1'd0)) begin
            count_fu_94 <= count_2_fu_259_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            count_fu_94 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1))) begin
            my_simon_core_ks1_KX_V_1_fu_106 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            my_simon_core_ks1_KX_V_1_fu_106 <= call_ret_update_fu_168_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1))) begin
            my_simon_core_ks1_KY_V_1_fu_110 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            my_simon_core_ks1_KY_V_1_fu_110 <= call_ret_update_fu_168_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1))) begin
            p_Val2_2_fu_82 <= {{Din[511:256]}};
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_Val2_2_fu_82 <= p_Result_19_fu_450_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1))) begin
            p_Val2_3_fu_86 <= share_c_V_fu_211_p1;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_Val2_3_fu_86 <= p_Result_20_fu_476_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1))) begin
            p_Val2_s_fu_78 <= {{Din[767:512]}};
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_Val2_s_fu_78 <= p_Result_s_fu_424_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_135)) begin
        if ((icmp_ln230_fu_253_p2 == 1'd0)) begin
            state_V_fu_90 <= my_simon_core_data_rdy_V_fu_314_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            state_V_fu_90 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        my_simon_core_counter_V_1_fu_102 <= call_ret_update_fu_168_ap_return_5;
        my_simon_core_dp_cipher_out_V_1_fu_98 <= call_ret_update_fu_168_ap_return_12;
        my_simon_core_dp_share_a_X_V_1_fu_130 <= call_ret_update_fu_168_ap_return_13;
        my_simon_core_dp_share_a_Y_V_1_fu_134 <= call_ret_update_fu_168_ap_return_14;
        my_simon_core_dp_share_a_Y_out_V_1_fu_142 <= call_ret_update_fu_168_ap_return_9;
        my_simon_core_dp_share_a_temp_V_1_fu_138 <= call_ret_update_fu_168_ap_return_8;
        my_simon_core_dp_share_b_X_V_1_fu_146 <= call_ret_update_fu_168_ap_return_15;
        my_simon_core_dp_share_b_Y_V_1_fu_150 <= call_ret_update_fu_168_ap_return_16;
        my_simon_core_dp_share_b_Y_out_V_1_fu_158 <= call_ret_update_fu_168_ap_return_11;
        my_simon_core_dp_share_b_temp_V_1_fu_154 <= call_ret_update_fu_168_ap_return_10;
        my_simon_core_ks1_key_out_V_1_fu_114 <= call_ret_update_fu_168_ap_return_6;
        my_simon_core_ks2_KX_V_1_fu_118 <= call_ret_update_fu_168_ap_return_3;
        my_simon_core_ks2_KY_V_1_fu_122 <= call_ret_update_fu_168_ap_return_4;
        my_simon_core_ks2_key_out_V_1_fu_126 <= call_ret_update_fu_168_ap_return_7;
        phi_ln186_fu_74 <= trunc_ln230_fu_559_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln230_fu_253_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        my_simon_core_data_rdy_V_reg_812 <= my_simon_core_data_rdy_V_fu_314_p3;
    end
end

always @ (*) begin
    if (((icmp_ln230_fu_253_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_count_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_count_1 = count_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_phi_ln186_load = trunc_ln230_fu_559_p1;
    end else begin
        ap_sig_allocacmp_phi_ln186_load = phi_ln186_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_state_V_load = 2'd2;
    end else begin
        ap_sig_allocacmp_state_V_load = state_V_fu_90;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln1019_fu_308_p2 = (icmp_ln235_1_fu_302_p2 & icmp_ln1019_1_fu_282_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_135 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_return = ap_sig_allocacmp_phi_ln186_load;

assign call_ret_update_fu_168_p_read = p_Val2_s_fu_78[32'd1];

assign call_ret_update_fu_168_p_read1 = (tmp_2_fu_468_p3 ^ tmp_1_fu_442_p3);

assign count_2_fu_259_p2 = (ap_sig_allocacmp_count_1 + 9'd1);

assign icmp_ln1019_1_fu_282_p2 = ((ap_sig_allocacmp_state_V_load == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln1019_fu_268_p2 = ((ap_sig_allocacmp_state_V_load == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln230_fu_253_p2 = ((ap_sig_allocacmp_count_1 == 9'd393) ? 1'b1 : 1'b0);

assign icmp_ln235_1_fu_302_p2 = ((ap_sig_allocacmp_count_1 == 9'd128) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_288_p2 = ((ap_sig_allocacmp_count_1 == 9'd256) ? 1'b1 : 1'b0);

assign my_simon_core_data_rdy_V_fu_314_p3 = ((and_ln1019_fu_308_p2[0:0] == 1'b1) ? 2'd1 : select_ln235_fu_294_p3);

assign p_Result_19_fu_450_p3 = {{1'd0}, {tmp_s_fu_432_p4}};

assign p_Result_20_fu_476_p3 = {{1'd0}, {tmp_16_fu_458_p4}};

assign p_Result_s_fu_424_p3 = {{1'd0}, {tmp4_fu_405_p4}};

assign select_ln235_fu_294_p3 = ((icmp_ln235_fu_288_p2[0:0] == 1'b1) ? select_ln244_fu_274_p3 : ap_sig_allocacmp_state_V_load);

assign select_ln244_fu_274_p3 = ((icmp_ln1019_fu_268_p2[0:0] == 1'b1) ? 2'd3 : ap_sig_allocacmp_state_V_load);

assign share_c_V_fu_211_p1 = Din[255:0];

assign tmp4_fu_405_p4 = {{p_Val2_s_fu_78[255:1]}};

assign tmp_16_fu_458_p4 = {{p_Val2_3_fu_86[255:1]}};

assign tmp_1_fu_442_p3 = p_Val2_2_fu_82[32'd1];

assign tmp_2_fu_468_p3 = p_Val2_3_fu_86[32'd1];

assign tmp_s_fu_432_p4 = {{p_Val2_2_fu_82[255:1]}};

assign trunc_ln230_fu_559_p1 = call_ret_update_fu_168_ap_return_0[126:0];

endmodule //top
