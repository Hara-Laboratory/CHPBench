// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module led_serial_top_staten_next (
        ap_ready,
        state_next_read,
        value_r,
        i,
        j,
        ap_return
);


output   ap_ready;
input  [63:0] state_next_read;
input  [3:0] value_r;
input  [1:0] i;
input  [1:0] j;
output  [63:0] ap_return;

wire   [3:0] shl_ln_fu_54_p3;
wire   [3:0] xor_ln758_fu_62_p2;
wire   [3:0] j_cast_fu_50_p1;
wire   [3:0] sub_ln758_fu_68_p2;
wire   [5:0] shl_ln758_1_fu_74_p3;
wire   [63:0] zext_ln368_fu_82_p1;
wire   [63:0] shl_ln368_fu_86_p2;
wire   [63:0] xor_ln368_fu_92_p2;
wire   [63:0] zext_ln368_2_fu_104_p1;
wire   [63:0] and_ln368_fu_98_p2;
wire   [63:0] shl_ln368_2_fu_108_p2;

assign and_ln368_fu_98_p2 = (xor_ln368_fu_92_p2 & state_next_read);

assign ap_ready = 1'b1;

assign j_cast_fu_50_p1 = j;

assign shl_ln368_2_fu_108_p2 = zext_ln368_2_fu_104_p1 << zext_ln368_fu_82_p1;

assign shl_ln368_fu_86_p2 = 64'd15 << zext_ln368_fu_82_p1;

assign shl_ln758_1_fu_74_p3 = {{sub_ln758_fu_68_p2}, {2'd0}};

assign shl_ln_fu_54_p3 = {{i}, {2'd0}};

assign sub_ln758_fu_68_p2 = (xor_ln758_fu_62_p2 - j_cast_fu_50_p1);

assign xor_ln368_fu_92_p2 = (shl_ln368_fu_86_p2 ^ 64'd18446744073709551615);

assign xor_ln758_fu_62_p2 = (shl_ln_fu_54_p3 ^ 4'd15);

assign zext_ln368_2_fu_104_p1 = value_r;

assign zext_ln368_fu_82_p1 = shl_ln758_1_fu_74_p3;

assign ap_return = (shl_ln368_2_fu_108_p2 | and_ln368_fu_98_p2);

endmodule //led_serial_top_staten_next
