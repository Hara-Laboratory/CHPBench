// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module led_serial_top_logic_addconst_decode (
        ap_ready,
        d,
        mask,
        rc,
        ap_return
);


output   ap_ready;
input  [3:0] d;
input  [3:0] mask;
input  [5:0] rc;
output  [7:0] ap_return;

wire   [7:0] tmp_2_fu_320_p3;
reg   [7:0] ap_phi_mux_agg_result_0_phi_fu_69_p32;
wire   [3:0] d_read_read_fu_60_p2;
wire   [7:0] tmp_5_fu_113_p3;
wire   [7:0] trunc_ln371_4_fu_136_p3;
wire   [7:0] trunc_ln371_3_fu_151_p3;
wire   [7:0] tmp_3_fu_160_p3;
wire   [7:0] tmp_9_fu_169_p3;
wire   [7:0] trunc_ln371_s_fu_188_p3;
wire   [7:0] trunc_ln371_9_fu_203_p3;
wire   [7:0] tmp_8_fu_212_p3;
wire   [7:0] tmp_7_fu_221_p3;
wire   [7:0] trunc_ln371_6_fu_244_p3;
wire   [7:0] trunc_ln371_5_fu_259_p3;
wire   [7:0] tmp_6_fu_268_p3;
wire   [7:0] tmp_4_fu_277_p3;
wire   [7:0] trunc_ln371_2_fu_296_p3;
wire   [7:0] trunc_ln371_1_fu_311_p3;
wire   [2:0] trunc_ln311_1_fu_122_p1;
wire   [3:0] zext_ln1499_3_fu_126_p1;
wire   [3:0] xor_ln266_7_fu_130_p2;
wire   [3:0] xor_ln266_6_fu_145_p2;
wire   [2:0] grp_fu_103_p4;
wire   [3:0] zext_ln1499_2_fu_178_p1;
wire   [3:0] xor_ln266_5_fu_182_p2;
wire   [3:0] xor_ln266_4_fu_197_p2;
wire   [2:0] trunc_ln311_fu_230_p1;
wire   [3:0] zext_ln1499_1_fu_234_p1;
wire   [3:0] xor_ln266_3_fu_238_p2;
wire   [3:0] xor_ln266_2_fu_253_p2;
wire   [3:0] zext_ln1499_fu_286_p1;
wire   [3:0] xor_ln266_1_fu_290_p2;
wire   [3:0] xor_ln266_fu_305_p2;
wire    ap_ce_reg;

always @ (*) begin
    if ((d_read_read_fu_60_p2 == 4'd0)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_1_fu_311_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd1)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_2_fu_296_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd2)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_4_fu_277_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd3)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_6_fu_268_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd4)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_5_fu_259_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd5)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_6_fu_244_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd6)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_7_fu_221_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd7)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_8_fu_212_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd8)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_9_fu_203_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd9)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_s_fu_188_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd10)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_9_fu_169_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd11)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_3_fu_160_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd12)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_3_fu_151_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd13)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = trunc_ln371_4_fu_136_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd14)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_5_fu_113_p3;
    end else if ((d_read_read_fu_60_p2 == 4'd15)) begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = tmp_2_fu_320_p3;
    end else begin
        ap_phi_mux_agg_result_0_phi_fu_69_p32 = 'bx;
    end
end

assign ap_ready = 1'b1;

assign grp_fu_103_p4 = {{rc[5:3]}};

assign tmp_2_fu_320_p3 = {{mask}, {mask}};

assign tmp_3_fu_160_p3 = {{mask}, {mask}};

assign tmp_4_fu_277_p3 = {{mask}, {mask}};

assign tmp_5_fu_113_p3 = {{mask}, {mask}};

assign tmp_6_fu_268_p3 = {{mask}, {mask}};

assign tmp_7_fu_221_p3 = {{mask}, {mask}};

assign tmp_8_fu_212_p3 = {{mask}, {mask}};

assign tmp_9_fu_169_p3 = {{mask}, {mask}};

assign trunc_ln311_1_fu_122_p1 = rc[2:0];

assign trunc_ln311_fu_230_p1 = rc[2:0];

assign trunc_ln371_1_fu_311_p3 = {{xor_ln266_fu_305_p2}, {mask}};

assign trunc_ln371_2_fu_296_p3 = {{xor_ln266_1_fu_290_p2}, {mask}};

assign trunc_ln371_3_fu_151_p3 = {{xor_ln266_6_fu_145_p2}, {mask}};

assign trunc_ln371_4_fu_136_p3 = {{xor_ln266_7_fu_130_p2}, {mask}};

assign trunc_ln371_5_fu_259_p3 = {{xor_ln266_2_fu_253_p2}, {mask}};

assign trunc_ln371_6_fu_244_p3 = {{xor_ln266_3_fu_238_p2}, {mask}};

assign trunc_ln371_9_fu_203_p3 = {{xor_ln266_4_fu_197_p2}, {mask}};

assign trunc_ln371_s_fu_188_p3 = {{xor_ln266_5_fu_182_p2}, {mask}};

assign xor_ln266_1_fu_290_p2 = (zext_ln1499_fu_286_p1 ^ mask);

assign xor_ln266_2_fu_253_p2 = (mask ^ 4'd9);

assign xor_ln266_3_fu_238_p2 = (zext_ln1499_1_fu_234_p1 ^ mask);

assign xor_ln266_4_fu_197_p2 = (mask ^ 4'd2);

assign xor_ln266_5_fu_182_p2 = (zext_ln1499_2_fu_178_p1 ^ mask);

assign xor_ln266_6_fu_145_p2 = (mask ^ 4'd3);

assign xor_ln266_7_fu_130_p2 = (zext_ln1499_3_fu_126_p1 ^ mask);

assign xor_ln266_fu_305_p2 = (mask ^ 4'd8);

assign zext_ln1499_1_fu_234_p1 = trunc_ln311_fu_230_p1;

assign zext_ln1499_2_fu_178_p1 = grp_fu_103_p4;

assign zext_ln1499_3_fu_126_p1 = trunc_ln311_1_fu_122_p1;

assign zext_ln1499_fu_286_p1 = grp_fu_103_p4;

assign ap_return = ap_phi_mux_agg_result_0_phi_fu_69_p32;

assign d_read_read_fu_60_p2 = d;

endmodule //led_serial_top_logic_addconst_decode
