// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="led_serial_top_led_serial_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg676-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.190050,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3422,HLS_SYN_LUT=14212,HLS_VERSION=2022_2}" *)

module led_serial_top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        keyi,
        datai,
        ap_return
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] keyi;
input  [63:0] datai;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] led_serial_sbox_done_constprop;
reg   [3:0] led_serial_sbox_ctlstate_constprop;
wire   [7:0] p_Result_s_fu_531_p3;
reg   [7:0] p_Result_s_reg_952;
wire    ap_CS_fsm_state2;
wire   [0:0] ap_phi_mux_led_serial_done_0_phi_fu_238_p4;
reg   [0:0] led_serial_random_0_u4_q_V_1_reg_957;
reg   [0:0] led_serial_random_0_u3_q_V_1_reg_962;
reg   [0:0] led_serial_random_0_u2_q_V_1_reg_967;
reg   [0:0] led_serial_random_0_u1_q_V_1_reg_972;
reg   [0:0] led_serial_random_1_u4_q_V_1_reg_977;
reg   [0:0] led_serial_random_1_u3_q_V_1_reg_982;
reg   [0:0] led_serial_random_1_u2_q_V_1_reg_987;
reg   [0:0] led_serial_random_1_u1_q_V_1_reg_992;
wire    ap_CS_fsm_state3;
wire    call_ret1_update_1_fu_245_ap_ready;
wire   [3:0] call_ret1_update_1_fu_245_ap_return_0;
wire   [0:0] call_ret1_update_1_fu_245_ap_return_1;
wire   [0:0] call_ret1_update_1_fu_245_ap_return_2;
wire   [0:0] call_ret1_update_1_fu_245_ap_return_3;
wire   [0:0] call_ret1_update_1_fu_245_ap_return_4;
wire   [3:0] call_ret1_update_1_fu_245_ap_return_5;
wire    call_ret2_update_1_fu_260_ap_ready;
wire   [3:0] call_ret2_update_1_fu_260_ap_return_0;
wire   [0:0] call_ret2_update_1_fu_260_ap_return_1;
wire   [0:0] call_ret2_update_1_fu_260_ap_return_2;
wire   [0:0] call_ret2_update_1_fu_260_ap_return_3;
wire   [0:0] call_ret2_update_1_fu_260_ap_return_4;
wire   [3:0] call_ret2_update_1_fu_260_ap_return_5;
wire    call_ret4_update_1_fu_275_ap_ready;
wire   [3:0] call_ret4_update_1_fu_275_ap_return_0;
wire   [0:0] call_ret4_update_1_fu_275_ap_return_1;
wire   [0:0] call_ret4_update_1_fu_275_ap_return_2;
wire   [0:0] call_ret4_update_1_fu_275_ap_return_3;
wire   [0:0] call_ret4_update_1_fu_275_ap_return_4;
wire   [3:0] call_ret4_update_1_fu_275_ap_return_5;
wire    call_ret_update_1_fu_286_ap_ready;
wire   [3:0] call_ret_update_1_fu_286_ap_return_0;
wire   [0:0] call_ret_update_1_fu_286_ap_return_1;
wire   [0:0] call_ret_update_1_fu_286_ap_return_2;
wire   [0:0] call_ret_update_1_fu_286_ap_return_3;
wire   [0:0] call_ret_update_1_fu_286_ap_return_4;
wire   [3:0] call_ret_update_1_fu_286_ap_return_5;
wire    grp_control_logic_fu_297_ap_start;
wire    grp_control_logic_fu_297_ap_done;
wire    grp_control_logic_fu_297_ap_idle;
wire    grp_control_logic_fu_297_ap_ready;
wire   [0:0] grp_control_logic_fu_297_led_serial_sbox_done_constprop_o;
wire    grp_control_logic_fu_297_led_serial_sbox_done_constprop_o_ap_vld;
wire   [3:0] grp_control_logic_fu_297_led_serial_sbox_ctlstate_constprop_o;
wire    grp_control_logic_fu_297_led_serial_sbox_ctlstate_constprop_o_ap_vld;
wire   [0:0] grp_control_logic_fu_297_ap_return_0;
wire   [7:0] grp_control_logic_fu_297_ap_return_1;
wire   [7:0] grp_control_logic_fu_297_ap_return_2;
wire   [7:0] grp_control_logic_fu_297_ap_return_3;
wire   [7:0] grp_control_logic_fu_297_ap_return_4;
wire   [7:0] grp_control_logic_fu_297_ap_return_5;
wire   [63:0] grp_control_logic_fu_297_ap_return_6;
wire   [0:0] grp_control_logic_fu_297_ap_return_7;
wire   [4:0] grp_control_logic_fu_297_ap_return_8;
wire   [3:0] grp_control_logic_fu_297_ap_return_9;
wire   [3:0] grp_control_logic_fu_297_ap_return_10;
wire   [3:0] grp_control_logic_fu_297_ap_return_11;
wire   [4:0] grp_control_logic_fu_297_ap_return_12;
wire   [63:0] grp_control_logic_fu_297_ap_return_13;
wire   [127:0] grp_control_logic_fu_297_ap_return_14;
wire   [127:0] grp_control_logic_fu_297_ap_return_15;
wire   [255:0] grp_control_logic_fu_297_ap_return_16;
wire   [5:0] grp_control_logic_fu_297_ap_return_17;
wire   [11:0] grp_control_logic_fu_297_ap_return_18;
reg   [0:0] led_serial_random_1_u4_q_V_0_reg_146;
reg   [0:0] led_serial_random_1_u3_q_V_0_reg_157;
reg   [0:0] led_serial_random_1_u2_q_V_0_reg_168;
reg   [0:0] led_serial_random_1_u1_q_V_0_reg_179;
reg   [0:0] led_serial_random_0_u4_q_V_0_reg_190;
reg   [0:0] led_serial_random_0_u3_q_V_0_reg_201;
reg   [0:0] led_serial_random_0_u2_q_V_0_reg_212;
reg   [0:0] led_serial_random_0_u1_q_V_0_reg_223;
reg   [0:0] led_serial_done_0_reg_234;
reg    grp_control_logic_fu_297_ap_start_reg;
reg   [0:0] led_serial_sbox_start_V_1_fu_54;
reg   [63:0] led_serial_dataq_V_1_fu_58;
reg   [7:0] led_serial_temp_reg5_V_1_fu_62;
reg   [4:0] led_serial_ctlstate_V_1_fu_66;
reg   [3:0] led_serial_bcount_V_1_fu_70;
reg   [3:0] led_serial_rcount_V_1_fu_74;
reg   [3:0] led_serial_scount_V_1_fu_78;
reg   [4:0] led_serial_keycount_V_1_fu_82;
reg   [63:0] led_serial_state_V_1_fu_86;
reg   [127:0] led_serial_key_V_1_fu_90;
reg   [127:0] led_serial_state_shared_V_1_fu_94;
reg   [255:0] led_serial_key_shared_V_1_fu_98;
reg   [5:0] led_serial_rc_V_1_fu_102;
reg   [3:0] led_serial_random_0_o_V_2_fu_106;
reg   [3:0] led_serial_random_1_o_V_2_fu_110;
reg   [11:0] led_serial_sbox_nibblesq_12_V_1_fu_114;
reg   [7:0] led_serial_temp_reg4_V_1_fu_118;
reg   [7:0] led_serial_temp_reg3_V_1_fu_122;
reg   [7:0] led_serial_temp_reg2_V_1_fu_126;
reg   [7:0] led_serial_temp_reg1_V_1_fu_130;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 led_serial_sbox_done_constprop = 1'd0;
#0 led_serial_sbox_ctlstate_constprop = 4'd0;
#0 grp_control_logic_fu_297_ap_start_reg = 1'b0;
end

led_serial_top_update_1 call_ret1_update_1_fu_245(
    .ap_ready(call_ret1_update_1_fu_245_ap_ready),
    .this_o_V_read(led_serial_random_0_o_V_2_fu_106),
    .this_u1_q_V_read(led_serial_random_0_u1_q_V_0_reg_223),
    .this_u2_q_V_read(led_serial_random_0_u2_q_V_0_reg_212),
    .this_u3_q_V_read(led_serial_random_0_u3_q_V_0_reg_201),
    .this_u4_q_V_read(led_serial_random_0_u4_q_V_0_reg_190),
    .clk(1'd1),
    .ap_return_0(call_ret1_update_1_fu_245_ap_return_0),
    .ap_return_1(call_ret1_update_1_fu_245_ap_return_1),
    .ap_return_2(call_ret1_update_1_fu_245_ap_return_2),
    .ap_return_3(call_ret1_update_1_fu_245_ap_return_3),
    .ap_return_4(call_ret1_update_1_fu_245_ap_return_4),
    .ap_return_5(call_ret1_update_1_fu_245_ap_return_5)
);

led_serial_top_update_1 call_ret2_update_1_fu_260(
    .ap_ready(call_ret2_update_1_fu_260_ap_ready),
    .this_o_V_read(led_serial_random_1_o_V_2_fu_110),
    .this_u1_q_V_read(led_serial_random_1_u1_q_V_0_reg_179),
    .this_u2_q_V_read(led_serial_random_1_u2_q_V_0_reg_168),
    .this_u3_q_V_read(led_serial_random_1_u3_q_V_0_reg_157),
    .this_u4_q_V_read(led_serial_random_1_u4_q_V_0_reg_146),
    .clk(1'd1),
    .ap_return_0(call_ret2_update_1_fu_260_ap_return_0),
    .ap_return_1(call_ret2_update_1_fu_260_ap_return_1),
    .ap_return_2(call_ret2_update_1_fu_260_ap_return_2),
    .ap_return_3(call_ret2_update_1_fu_260_ap_return_3),
    .ap_return_4(call_ret2_update_1_fu_260_ap_return_4),
    .ap_return_5(call_ret2_update_1_fu_260_ap_return_5)
);

led_serial_top_update_1 call_ret4_update_1_fu_275(
    .ap_ready(call_ret4_update_1_fu_275_ap_ready),
    .this_o_V_read(call_ret1_update_1_fu_245_ap_return_5),
    .this_u1_q_V_read(call_ret1_update_1_fu_245_ap_return_1),
    .this_u2_q_V_read(call_ret1_update_1_fu_245_ap_return_2),
    .this_u3_q_V_read(call_ret1_update_1_fu_245_ap_return_3),
    .this_u4_q_V_read(call_ret1_update_1_fu_245_ap_return_4),
    .clk(1'd0),
    .ap_return_0(call_ret4_update_1_fu_275_ap_return_0),
    .ap_return_1(call_ret4_update_1_fu_275_ap_return_1),
    .ap_return_2(call_ret4_update_1_fu_275_ap_return_2),
    .ap_return_3(call_ret4_update_1_fu_275_ap_return_3),
    .ap_return_4(call_ret4_update_1_fu_275_ap_return_4),
    .ap_return_5(call_ret4_update_1_fu_275_ap_return_5)
);

led_serial_top_update_1 call_ret_update_1_fu_286(
    .ap_ready(call_ret_update_1_fu_286_ap_ready),
    .this_o_V_read(call_ret2_update_1_fu_260_ap_return_5),
    .this_u1_q_V_read(call_ret2_update_1_fu_260_ap_return_1),
    .this_u2_q_V_read(call_ret2_update_1_fu_260_ap_return_2),
    .this_u3_q_V_read(call_ret2_update_1_fu_260_ap_return_3),
    .this_u4_q_V_read(call_ret2_update_1_fu_260_ap_return_4),
    .clk(1'd0),
    .ap_return_0(call_ret_update_1_fu_286_ap_return_0),
    .ap_return_1(call_ret_update_1_fu_286_ap_return_1),
    .ap_return_2(call_ret_update_1_fu_286_ap_return_2),
    .ap_return_3(call_ret_update_1_fu_286_ap_return_3),
    .ap_return_4(call_ret_update_1_fu_286_ap_return_4),
    .ap_return_5(call_ret_update_1_fu_286_ap_return_5)
);

led_serial_top_control_logic grp_control_logic_fu_297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_control_logic_fu_297_ap_start),
    .ap_done(grp_control_logic_fu_297_ap_done),
    .ap_idle(grp_control_logic_fu_297_ap_idle),
    .ap_ready(grp_control_logic_fu_297_ap_ready),
    .this_ctlstate_read(led_serial_ctlstate_V_1_fu_66),
    .this_bcount_read(led_serial_bcount_V_1_fu_70),
    .this_rcount_read(led_serial_rcount_V_1_fu_74),
    .this_scount_read(led_serial_scount_V_1_fu_78),
    .this_keycount_read(led_serial_keycount_V_1_fu_82),
    .this_state_read(led_serial_state_V_1_fu_86),
    .this_key_read(led_serial_key_V_1_fu_90),
    .this_state_shared_read(led_serial_state_shared_V_1_fu_94),
    .this_key_shared_read(led_serial_key_shared_V_1_fu_98),
    .this_rc_read(led_serial_rc_V_1_fu_102),
    .p_read32(led_serial_sbox_start_V_1_fu_54),
    .p_read13(led_serial_sbox_nibblesq_12_V_1_fu_114),
    .p_read45(led_serial_temp_reg1_V_1_fu_130),
    .p_read46(led_serial_temp_reg2_V_1_fu_126),
    .p_read47(led_serial_temp_reg3_V_1_fu_122),
    .p_read48(led_serial_temp_reg4_V_1_fu_118),
    .p_read49(led_serial_temp_reg5_V_1_fu_62),
    .p_read54(keyi),
    .p_read55(datai),
    .p_read62(p_Result_s_reg_952),
    .led_serial_sbox_done_constprop_i(led_serial_sbox_done_constprop),
    .led_serial_sbox_done_constprop_o(grp_control_logic_fu_297_led_serial_sbox_done_constprop_o),
    .led_serial_sbox_done_constprop_o_ap_vld(grp_control_logic_fu_297_led_serial_sbox_done_constprop_o_ap_vld),
    .led_serial_sbox_ctlstate_constprop_i(led_serial_sbox_ctlstate_constprop),
    .led_serial_sbox_ctlstate_constprop_o(grp_control_logic_fu_297_led_serial_sbox_ctlstate_constprop_o),
    .led_serial_sbox_ctlstate_constprop_o_ap_vld(grp_control_logic_fu_297_led_serial_sbox_ctlstate_constprop_o_ap_vld),
    .ap_return_0(grp_control_logic_fu_297_ap_return_0),
    .ap_return_1(grp_control_logic_fu_297_ap_return_1),
    .ap_return_2(grp_control_logic_fu_297_ap_return_2),
    .ap_return_3(grp_control_logic_fu_297_ap_return_3),
    .ap_return_4(grp_control_logic_fu_297_ap_return_4),
    .ap_return_5(grp_control_logic_fu_297_ap_return_5),
    .ap_return_6(grp_control_logic_fu_297_ap_return_6),
    .ap_return_7(grp_control_logic_fu_297_ap_return_7),
    .ap_return_8(grp_control_logic_fu_297_ap_return_8),
    .ap_return_9(grp_control_logic_fu_297_ap_return_9),
    .ap_return_10(grp_control_logic_fu_297_ap_return_10),
    .ap_return_11(grp_control_logic_fu_297_ap_return_11),
    .ap_return_12(grp_control_logic_fu_297_ap_return_12),
    .ap_return_13(grp_control_logic_fu_297_ap_return_13),
    .ap_return_14(grp_control_logic_fu_297_ap_return_14),
    .ap_return_15(grp_control_logic_fu_297_ap_return_15),
    .ap_return_16(grp_control_logic_fu_297_ap_return_16),
    .ap_return_17(grp_control_logic_fu_297_ap_return_17),
    .ap_return_18(grp_control_logic_fu_297_ap_return_18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_control_logic_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_phi_mux_led_serial_done_0_phi_fu_238_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_control_logic_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_control_logic_fu_297_ap_ready == 1'b1)) begin
            grp_control_logic_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_bcount_V_1_fu_70 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_bcount_V_1_fu_70 <= grp_control_logic_fu_297_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_ctlstate_V_1_fu_66 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_ctlstate_V_1_fu_66 <= grp_control_logic_fu_297_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_dataq_V_1_fu_58 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_dataq_V_1_fu_58 <= grp_control_logic_fu_297_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_done_0_reg_234 <= grp_control_logic_fu_297_ap_return_7;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_done_0_reg_234 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_key_V_1_fu_90 <= 128'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_key_V_1_fu_90 <= grp_control_logic_fu_297_ap_return_14;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_key_shared_V_1_fu_98 <= 256'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_key_shared_V_1_fu_98 <= grp_control_logic_fu_297_ap_return_16;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_keycount_V_1_fu_82 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_keycount_V_1_fu_82 <= grp_control_logic_fu_297_ap_return_12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_0_o_V_2_fu_106 <= 4'd0;
    end else if (((ap_phi_mux_led_serial_done_0_phi_fu_238_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        led_serial_random_0_o_V_2_fu_106 <= call_ret4_update_1_fu_275_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_0_u1_q_V_0_reg_223 <= led_serial_random_0_u1_q_V_1_reg_972;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_0_u1_q_V_0_reg_223 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_0_u2_q_V_0_reg_212 <= led_serial_random_0_u2_q_V_1_reg_967;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_0_u2_q_V_0_reg_212 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_0_u3_q_V_0_reg_201 <= led_serial_random_0_u3_q_V_1_reg_962;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_0_u3_q_V_0_reg_201 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_0_u4_q_V_0_reg_190 <= led_serial_random_0_u4_q_V_1_reg_957;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_0_u4_q_V_0_reg_190 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_1_o_V_2_fu_110 <= 4'd0;
    end else if (((ap_phi_mux_led_serial_done_0_phi_fu_238_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        led_serial_random_1_o_V_2_fu_110 <= call_ret_update_1_fu_286_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_1_u1_q_V_0_reg_179 <= led_serial_random_1_u1_q_V_1_reg_992;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_1_u1_q_V_0_reg_179 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_1_u2_q_V_0_reg_168 <= led_serial_random_1_u2_q_V_1_reg_987;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_1_u2_q_V_0_reg_168 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_1_u3_q_V_0_reg_157 <= led_serial_random_1_u3_q_V_1_reg_982;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_1_u3_q_V_0_reg_157 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_random_1_u4_q_V_0_reg_146 <= led_serial_random_1_u4_q_V_1_reg_977;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_random_1_u4_q_V_0_reg_146 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_rcount_V_1_fu_74 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_rcount_V_1_fu_74 <= grp_control_logic_fu_297_ap_return_10;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_sbox_ctlstate_constprop <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_led_serial_sbox_ctlstate_constprop_o_ap_vld == 1'b1))) begin
        led_serial_sbox_ctlstate_constprop <= grp_control_logic_fu_297_led_serial_sbox_ctlstate_constprop_o;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_sbox_done_constprop <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_led_serial_sbox_done_constprop_o_ap_vld == 1'b1))) begin
        led_serial_sbox_done_constprop <= grp_control_logic_fu_297_led_serial_sbox_done_constprop_o;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_scount_V_1_fu_78 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_scount_V_1_fu_78 <= grp_control_logic_fu_297_ap_return_11;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_state_V_1_fu_86 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_state_V_1_fu_86 <= grp_control_logic_fu_297_ap_return_13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        led_serial_state_shared_V_1_fu_94 <= 128'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_state_shared_V_1_fu_94 <= grp_control_logic_fu_297_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_led_serial_done_0_phi_fu_238_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        led_serial_random_0_u1_q_V_1_reg_972 <= call_ret4_update_1_fu_275_ap_return_1;
        led_serial_random_0_u2_q_V_1_reg_967 <= call_ret4_update_1_fu_275_ap_return_2;
        led_serial_random_0_u3_q_V_1_reg_962 <= call_ret4_update_1_fu_275_ap_return_3;
        led_serial_random_0_u4_q_V_1_reg_957 <= call_ret4_update_1_fu_275_ap_return_4;
        led_serial_random_1_u1_q_V_1_reg_992 <= call_ret_update_1_fu_286_ap_return_1;
        led_serial_random_1_u2_q_V_1_reg_987 <= call_ret_update_1_fu_286_ap_return_2;
        led_serial_random_1_u3_q_V_1_reg_982 <= call_ret_update_1_fu_286_ap_return_3;
        led_serial_random_1_u4_q_V_1_reg_977 <= call_ret_update_1_fu_286_ap_return_4;
        p_Result_s_reg_952 <= p_Result_s_fu_531_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
        led_serial_rc_V_1_fu_102 <= grp_control_logic_fu_297_ap_return_17;
        led_serial_sbox_nibblesq_12_V_1_fu_114 <= grp_control_logic_fu_297_ap_return_18;
        led_serial_sbox_start_V_1_fu_54 <= grp_control_logic_fu_297_ap_return_0;
        led_serial_temp_reg1_V_1_fu_130 <= grp_control_logic_fu_297_ap_return_1;
        led_serial_temp_reg2_V_1_fu_126 <= grp_control_logic_fu_297_ap_return_2;
        led_serial_temp_reg3_V_1_fu_122 <= grp_control_logic_fu_297_ap_return_3;
        led_serial_temp_reg4_V_1_fu_118 <= grp_control_logic_fu_297_ap_return_4;
        led_serial_temp_reg5_V_1_fu_62 <= grp_control_logic_fu_297_ap_return_5;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_control_logic_fu_297_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_led_serial_done_0_phi_fu_238_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_led_serial_done_0_phi_fu_238_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_phi_mux_led_serial_done_0_phi_fu_238_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_control_logic_fu_297_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_phi_mux_led_serial_done_0_phi_fu_238_p4 = led_serial_done_0_reg_234;

assign ap_return = led_serial_dataq_V_1_fu_58;

assign grp_control_logic_fu_297_ap_start = grp_control_logic_fu_297_ap_start_reg;

assign p_Result_s_fu_531_p3 = {{call_ret2_update_1_fu_260_ap_return_0}, {call_ret1_update_1_fu_245_ap_return_0}};

endmodule //led_serial_top
