// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module led_serial_top_update_1 (
        ap_ready,
        this_o_V_read,
        this_u1_q_V_read,
        this_u2_q_V_read,
        this_u3_q_V_read,
        this_u4_q_V_read,
        clk,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5
);


output   ap_ready;
input  [3:0] this_o_V_read;
input  [0:0] this_u1_q_V_read;
input  [0:0] this_u2_q_V_read;
input  [0:0] this_u3_q_V_read;
input  [0:0] this_u4_q_V_read;
input  [0:0] clk;
output  [3:0] ap_return_0;
output  [0:0] ap_return_1;
output  [0:0] ap_return_2;
output  [0:0] ap_return_3;
output  [0:0] ap_return_4;
output  [3:0] ap_return_5;

wire   [0:0] tmp_3_fu_80_p3;
wire   [0:0] tmp_2_fu_72_p3;
wire   [0:0] t0_V_fu_88_p2;
wire   [0:0] r_V_fu_94_p2;
wire   [0:0] trunc_ln0_fu_68_p1;
wire   [0:0] tmp_4_fu_114_p3;
wire   [0:0] xor_ln61_1_fu_122_p2;
wire   [0:0] xor_ln61_fu_108_p2;
wire   [0:0] select_ln47_fu_100_p3;
wire   [0:0] tmp_5_fu_138_p3;
wire   [0:0] and_ln59_fu_172_p2;
wire   [2:0] tmp_fu_128_p4;
wire   [2:0] tmp_1_fu_146_p4;
wire   [0:0] xor_ln59_fu_178_p2;
wire   [2:0] select_ln59_3_fu_192_p3;
wire   [3:0] p_Result_s_fu_200_p3;
wire   [0:0] select_ln59_2_fu_184_p3;
wire   [0:0] select_ln59_fu_156_p3;
wire   [0:0] select_ln59_1_fu_164_p3;

assign and_ln59_fu_172_p2 = (tmp_5_fu_138_p3 & clk);

assign ap_ready = 1'b1;

assign p_Result_s_fu_200_p3 = {{xor_ln59_fu_178_p2}, {select_ln59_3_fu_192_p3}};

assign r_V_fu_94_p2 = (this_u1_q_V_read ^ 1'd1);

assign select_ln47_fu_100_p3 = ((t0_V_fu_88_p2[0:0] == 1'b1) ? r_V_fu_94_p2 : this_u1_q_V_read);

assign select_ln59_1_fu_164_p3 = ((clk[0:0] == 1'b1) ? xor_ln61_1_fu_122_p2 : this_u3_q_V_read);

assign select_ln59_2_fu_184_p3 = ((clk[0:0] == 1'b1) ? select_ln47_fu_100_p3 : this_u1_q_V_read);

assign select_ln59_3_fu_192_p3 = ((clk[0:0] == 1'b1) ? tmp_fu_128_p4 : tmp_1_fu_146_p4);

assign select_ln59_fu_156_p3 = ((clk[0:0] == 1'b1) ? xor_ln61_fu_108_p2 : this_u2_q_V_read);

assign t0_V_fu_88_p2 = (tmp_3_fu_80_p3 ^ tmp_2_fu_72_p3);

assign tmp_1_fu_146_p4 = {{{this_u3_q_V_read}, {this_u2_q_V_read}}, {this_u1_q_V_read}};

assign tmp_2_fu_72_p3 = this_o_V_read[32'd3];

assign tmp_3_fu_80_p3 = this_o_V_read[32'd2];

assign tmp_4_fu_114_p3 = this_o_V_read[32'd1];

assign tmp_5_fu_138_p3 = this_o_V_read[32'd2];

assign tmp_fu_128_p4 = {{{xor_ln61_1_fu_122_p2}, {xor_ln61_fu_108_p2}}, {select_ln47_fu_100_p3}};

assign trunc_ln0_fu_68_p1 = this_o_V_read[0:0];

assign xor_ln59_fu_178_p2 = (this_u4_q_V_read ^ and_ln59_fu_172_p2);

assign xor_ln61_1_fu_122_p2 = (tmp_4_fu_114_p3 ^ this_u3_q_V_read);

assign xor_ln61_fu_108_p2 = (trunc_ln0_fu_68_p1 ^ this_u2_q_V_read);

assign ap_return_0 = p_Result_s_fu_200_p3;

assign ap_return_1 = select_ln59_2_fu_184_p3;

assign ap_return_2 = select_ln59_fu_156_p3;

assign ap_return_3 = select_ln59_1_fu_164_p3;

assign ap_return_4 = xor_ln59_fu_178_p2;

assign ap_return_5 = p_Result_s_fu_200_p3;

endmodule //led_serial_top_update_1
